Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls   s/call   s/call  name    
 41.53     37.10    37.10 2010721713     0.00     0.00  Mcmc::beta(EpiRisk::Individual<TestCovars> const&, EpiRisk::Individual<TestCovars> const&) const
 27.85     61.98    24.88  8644636     0.00     0.00  Mcmc::integPressureOn(boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<EpiRisk::Individual<TestCovars>, std::allocator<EpiRisk::Individual<TestCovars> > > > > > > > const&, double)
 27.39     86.46    24.47 1996824830     0.00     0.00  Mcmc::betastar(EpiRisk::Individual<TestCovars> const&, EpiRisk::Individual<TestCovars> const&) const
  1.76     88.03     1.57     1924     0.00     0.00  boost::numeric::ublas::basic_row_major<unsigned long, long>::storage_size(unsigned long, unsigned long)
  0.55     88.52     0.50 180049400     0.00     0.00  EpiRisk::Individual<TestCovars>::getI() const
  0.51     88.98     0.46     1001     0.00     0.09  Mcmc::calcLogLikelihood()
  0.20     89.16     0.18 36240245     0.00     0.00  boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > >::operator()(unsigned long)
  0.08     89.24     0.08                             GammaPrior::~GammaPrior()
  0.06     89.29     0.05     1000     0.00     0.00  EpiRisk::McmcWriter<EpiRisk::Population<TestCovars> >::write(EpiRisk::Population<TestCovars>&)
  0.03     89.32     0.03   234235     0.00     0.00  std::_Rb_tree<std::string, std::pair<std::string const, double>, std::_Select1st<std::pair<std::string const, double> >, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::_M_insert_unique(std::pair<std::string const, double> const&)
  0.01     89.33     0.01   234236     0.00     0.00  std::_Rb_tree<std::string, std::pair<std::string const, double>, std::_Select1st<std::pair<std::string const, double> >, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, double> const&)
  0.01     89.34     0.01     8636     0.00     0.00  EpiRisk::Individual<TestCovars>::~Individual()
  0.00     89.34     0.00   198278     0.00     0.00  boost::numeric::ublas::unbounded_array<double, std::allocator<double> >::operator[](unsigned long) const
  0.00     89.34     0.00   148628     0.00     0.00  boost::numeric::ublas::unbounded_array<double, std::allocator<double> >::operator[](unsigned long)
  0.00     89.34     0.00   140858     0.00     0.00  boost::numeric::ublas::basic_row_major<unsigned long, long>::lower_element(unsigned long, unsigned long, unsigned long, unsigned long)
  0.00     89.34     0.00   133075     0.00     0.00  boost::numeric::ublas::basic_row_major<unsigned long, long>::element(unsigned long, unsigned long, unsigned long, unsigned long)
  0.00     89.34     0.00   111592     0.00     0.00  boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::operator()(unsigned long, unsigned long) const
  0.00     89.34     0.00    66987     0.00     0.00  unsigned long boost::numeric::ublas::same_impl_ex<unsigned long>(unsigned long const&, unsigned long const&, char const*, int)
  0.00     89.34     0.00    38882     0.00     0.00  EpiRisk::Individual<TestCovars>::hasBeenInfected() const
  0.00     89.34     0.00    35050     0.00     0.00  EpiRisk::Individual<TestCovars>::getId() const
  0.00     89.34     0.00    30784     0.00     0.00  boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::const_iterator2::operator==(boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::const_iterator2 const&) const
  0.00     89.34     0.00    29266     0.00     0.00  boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::operator()(unsigned long, unsigned long)
  0.00     89.34     0.00    26612     0.00     0.00  std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&)
  0.00     89.34     0.00    20078     0.00     0.00  EpiRisk::Random::Random(unsigned long)
  0.00     89.34     0.00    17272     0.00     0.00  std::_Rb_tree<EpiRisk::Contact<EpiRisk::Individual<TestCovars> >, EpiRisk::Contact<EpiRisk::Individual<TestCovars> >, std::_Identity<EpiRisk::Contact<EpiRisk::Individual<TestCovars> > >, std::less<EpiRisk::Contact<EpiRisk::Individual<TestCovars> > >, std::allocator<EpiRisk::Contact<EpiRisk::Individual<TestCovars> > > >::_M_erase(std::_Rb_tree_node<EpiRisk::Contact<EpiRisk::Individual<TestCovars> > >*)
  0.00     89.34     0.00    15392     0.00     0.00  boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >::const_iterator2::operator==(boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >::const_iterator2 const&) const
  0.00     89.34     0.00    13924     0.00     0.00  std::_Rb_tree<std::string, std::pair<std::string const, double>, std::_Select1st<std::pair<std::string const, double> >, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::_M_create_node(std::pair<std::string const, double> const&)
  0.00     89.34     0.00    10038     0.00     0.00  boost::numeric::ublas::vector_scalar_binary_traits<boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >, boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >, boost::numeric::ublas::vector_inner_prod<boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >, boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >, boost::numeric::ublas::promote_traits<boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >::value_type, boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >::value_type>::promote_type> >::result_type boost::numeric::ublas::inner_prod<boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >, boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > > >(boost::numeric::ublas::vector_expression<boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > > > const&, boost::numeric::ublas::vector_expression<boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > > > const&)
  0.00     89.34     0.00    10010     0.00     0.00  boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > >::const_iterator::operator*() const
  0.00     89.34     0.00     9620     0.00     0.00  Mcmc::dumpProdCache()
  0.00     89.34     0.00     8872     0.00     0.00  stlStrTok(std::vector<std::string, std::allocator<std::string> >&, std::string, char const*)
  0.00     89.34     0.00     8870     0.00     0.00  boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >::link(boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*, boost::multi_index::detail::ordered_index_side, boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*, boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*)
  0.00     89.34     0.00     8637     0.00     0.00  PopDataImporter::next()
  0.00     89.34     0.00     8636     0.00     0.00  boost::multi_index::detail::hashed_index<boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, boost::hash<std::string>, std::equal_to<std::string>, boost::multi_index::detail::nth_layer<2, EpiRisk::Individual<TestCovars>, boost::multi_index::indexed_by<boost::multi_index::sequenced<boost::multi_index::tag<EpiRisk::Population<TestCovars>::bySeq, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na> >, boost::multi_index::hashed_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byId, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, mpl_::na, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byI, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byDiseaseStatus, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, mpl_::na, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<EpiRisk::Individual<TestCovars> > >, boost::mpl::v_item<EpiRisk::Population<TestCovars>::byId, boost::mpl::vector0<mpl_::na>, 0>, boost::multi_index::detail::hashed_unique_tag>::insert_(EpiRisk::Individual<TestCovars> const&, boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<EpiRisk::Individual<TestCovars>, std::allocator<EpiRisk::Individual<TestCovars> > > > > >*)
  0.00     89.34     0.00     8636     0.00     0.00  boost::multi_index::detail::hashed_index<boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, boost::hash<bool>, std::equal_to<bool>, boost::multi_index::detail::nth_layer<4, EpiRisk::Individual<TestCovars>, boost::multi_index::indexed_by<boost::multi_index::sequenced<boost::multi_index::tag<EpiRisk::Population<TestCovars>::bySeq, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na> >, boost::multi_index::hashed_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byId, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, mpl_::na, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byI, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byDiseaseStatus, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, mpl_::na, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<EpiRisk::Individual<TestCovars> > >, boost::mpl::v_item<EpiRisk::Population<TestCovars>::byDiseaseStatus, boost::mpl::vector0<mpl_::na>, 0>, boost::multi_index::detail::hashed_non_unique_tag>::link_point(EpiRisk::Individual<TestCovars> const&, boost::multi_index::detail::hashed_index_node_impl<std::allocator<char> >*&, boost::multi_index::detail::hashed_non_unique_tag)
  0.00     89.34     0.00     8636     0.00     0.00  void boost::detail::allocator::construct<EpiRisk::Individual<TestCovars> >(void*, EpiRisk::Individual<TestCovars> const&)
  0.00     89.34     0.00     8636     0.00     0.00  boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>::operator()(EpiRisk::Individual<TestCovars> const&) const
  0.00     89.34     0.00     8636     0.00     0.00  boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>::operator()(EpiRisk::Individual<TestCovars> const&) const
  0.00     89.34     0.00     8000     0.00     0.00  GammaPrior::operator()(double)
  0.00     89.34     0.00     7540     0.00     0.00  GammaPrior::~GammaPrior()
  0.00     89.34     0.00     7540     0.00     0.00  GammaPrior::clone() const
  0.00     89.34     0.00     4004     0.00     0.00  EpiRisk::Parameter::~Parameter()
  0.00     89.34     0.00     4000     0.00     0.00  EpiRisk::Random::gaussian(double, double)
  0.00     89.34     0.00     3848     0.00     0.00  boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::const_iterator1::operator==(boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::const_iterator1 const&) const
  0.00     89.34     0.00     3848     0.00     0.00  boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::iterator2::operator-(boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::iterator2 const&) const
  0.00     89.34     0.00     2927     0.00     0.00  __gnu_cxx::new_allocator<double>::allocate(unsigned long, void const*)
  0.00     89.34     0.00     2000     0.00     0.00  EpiRisk::Random::uniform(double, double)
  0.00     89.34     0.00     1924     0.00     0.00  boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >::const_iterator1::operator==(boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >::const_iterator1 const&) const
  0.00     89.34     0.00     1122     0.00     0.00  std::_Rb_tree<std::string, std::pair<std::string const, double>, std::_Select1st<std::pair<std::string const, double> >, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, double> >*)
  0.00     89.34     0.00     1007     0.00     0.00  std::map<std::string, double, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::operator[](std::string const&)
  0.00     89.34     0.00     1005     0.00     0.00  EpiRisk::Random::mvgauss(boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > const&)
  0.00     89.34     0.00     1001     0.00     0.00  EpiRisk::EmpCovar<LogTransform>::sample()
  0.00     89.34     0.00     1000     0.00     0.09  Mcmc::updateTrans()
  0.00     89.34     0.00     1000     0.00     0.00  boost::numeric::ublas::unbounded_array<double, std::allocator<double> >::operator=(boost::numeric::ublas::unbounded_array<double, std::allocator<double> > const&)
  0.00     89.34     0.00     1000     0.00     0.00  void boost::numeric::ublas::indexing_vector_assign<boost::numeric::ublas::scalar_assign, boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_vector_binary1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_vector_prod1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double> > >(boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >&, boost::numeric::ublas::vector_expression<boost::numeric::ublas::matrix_vector_binary1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_vector_prod1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double> > > const&)
  0.00     89.34     0.00     1000     0.00     0.00  EpiRisk::McmcWriter<EpiRisk::Population<TestCovars> >::write(boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > >&)
  0.00     89.34     0.00     1000     0.00     0.00  boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > >::iterator::operator*() const
  0.00     89.34     0.00      965     0.00     0.00  unsigned long boost::numeric::ublas::basic_lower<unsigned long>::packed_size<boost::numeric::ublas::basic_row_major<unsigned long, long> >(boost::numeric::ublas::basic_row_major<unsigned long, long>, unsigned long, unsigned long)
  0.00     89.34     0.00      962     0.00     0.00  void boost::numeric::ublas::matrix_assign<boost::numeric::ublas::scalar_assign, boost::numeric::ublas::basic_full<unsigned long>, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > >(boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >&, boost::numeric::ublas::matrix_expression<boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > > const&, boost::numeric::ublas::packed_proxy_tag, boost::numeric::ublas::row_major_tag)
  0.00     89.34     0.00      962     0.00     0.00  void boost::numeric::ublas::indexing_matrix_assign<boost::numeric::ublas::scalar_assign, boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > >(boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >&, boost::numeric::ublas::matrix_expression<boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > > const&, boost::numeric::ublas::row_major_tag)
  0.00     89.34     0.00      962     0.00     0.00  EpiRisk::EmpCovar<LogTransform>::getCovariance()
  0.00     89.34     0.00      236     0.00     0.00  boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >::rotate_left(boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*, boost::multi_index::detail::ordered_index_node_compressed_base<std::allocator<char> >::parent_ref)
  0.00     89.34     0.00      235     0.00     0.00  EpiDataImporter::next()
  0.00     89.34     0.00      234     0.00     0.00  bool boost::multi_index::multi_index_container<EpiRisk::Individual<TestCovars>, boost::multi_index::indexed_by<boost::multi_index::sequenced<boost::multi_index::tag<EpiRisk::Population<TestCovars>::bySeq, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na> >, boost::multi_index::hashed_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byId, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, mpl_::na, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byI, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byDiseaseStatus, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, mpl_::na, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<EpiRisk::Individual<TestCovars> > >::modify_<EpiRisk::Population<TestCovars>::modifyEvents, EpiRisk::Population<TestCovars>::modifyEvents>(EpiRisk::Population<TestCovars>::modifyEvents&, EpiRisk::Population<TestCovars>::modifyEvents&, boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<EpiRisk::Individual<TestCovars>, std::allocator<EpiRisk::Individual<TestCovars> > > > > > >*)
  0.00     89.34     0.00      234     0.00     0.00  boost::multi_index::detail::hashed_index<boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, boost::hash<bool>, std::equal_to<bool>, boost::multi_index::detail::nth_layer<4, EpiRisk::Individual<TestCovars>, boost::multi_index::indexed_by<boost::multi_index::sequenced<boost::multi_index::tag<EpiRisk::Population<TestCovars>::bySeq, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na> >, boost::multi_index::hashed_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byId, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, mpl_::na, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byI, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byDiseaseStatus, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, mpl_::na, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<EpiRisk::Individual<TestCovars> > >, boost::mpl::v_item<EpiRisk::Population<TestCovars>::byDiseaseStatus, boost::mpl::vector0<mpl_::na>, 0>, boost::multi_index::detail::hashed_non_unique_tag>::modify_rollback_(boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<EpiRisk::Individual<TestCovars>, std::allocator<EpiRisk::Individual<TestCovars> > > >*)
  0.00     89.34     0.00      234     0.00     0.00  boost::multi_index::detail::ordered_index<boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, std::less<double>, boost::multi_index::detail::nth_layer<3, EpiRisk::Individual<TestCovars>, boost::multi_index::indexed_by<boost::multi_index::sequenced<boost::multi_index::tag<EpiRisk::Population<TestCovars>::bySeq, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na> >, boost::multi_index::hashed_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byId, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, mpl_::na, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byI, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byDiseaseStatus, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, mpl_::na, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<EpiRisk::Individual<TestCovars> > >, boost::mpl::v_item<EpiRisk::Population<TestCovars>::byI, boost::mpl::vector0<mpl_::na>, 0>, boost::multi_index::detail::ordered_non_unique_tag>::modify_rollback_(boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<EpiRisk::Individual<TestCovars>, std::allocator<EpiRisk::Individual<TestCovars> > > > >*)
  0.00     89.34     0.00      234     0.00     0.00  boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >::rebalance_for_erase(boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*, boost::multi_index::detail::ordered_index_node_compressed_base<std::allocator<char> >::parent_ref, boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*&, boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*&)
  0.00     89.34     0.00      118     0.00     0.00  std::_Rb_tree<std::string, std::pair<std::string const, double>, std::_Select1st<std::pair<std::string const, double> >, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::_M_copy(std::_Rb_tree_node<std::pair<std::string const, double> > const*, std::_Rb_tree_node<std::pair<std::string const, double> >*)
  0.00     89.34     0.00       16     0.00     0.00  __gnu_cxx::new_allocator<unsigned long>::allocate(unsigned long, void const*)
  0.00     89.34     0.00        8     0.00     0.00  boost::multi_index::detail::bucket_array<std::allocator<EpiRisk::Individual<TestCovars> > >::bucket_array(std::allocator<EpiRisk::Individual<TestCovars> > const&, boost::multi_index::detail::hashed_index_node_impl<std::allocator<char> >*, unsigned long)
  0.00     89.34     0.00        8     0.00     0.00  EpiRisk::UniformPrior::~UniformPrior()
  0.00     89.34     0.00        5     0.00     0.00  boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::~vector()
  0.00     89.34     0.00        4     0.00     0.00  EpiRisk::UniformPrior::clone() const
  0.00     89.34     0.00        3     0.00     0.00  std::vector<std::string, std::allocator<std::string> >::~vector()
  0.00     89.34     0.00        2     0.00     0.00  boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >::rotate_right(boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*, boost::multi_index::detail::ordered_index_node_compressed_base<std::allocator<char> >::parent_ref)
  0.00     89.34     0.00        2     0.00     0.00  std::_Rb_tree<std::string, std::pair<std::string const, double>, std::_Select1st<std::pair<std::string const, double> >, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<std::string const, double> >, std::pair<std::string const, double> const&)
  0.00     89.34     0.00        1     0.00     0.00  global constructors keyed to main
  0.00     89.34     0.00        1     0.00     0.00  EpiDataImporter::open()
  0.00     89.34     0.00        1     0.00     0.00  EpiDataImporter::EpiDataImporter(std::string)
  0.00     89.34     0.00        1     0.00     0.00  EpiDataImporter::~EpiDataImporter()
  0.00     89.34     0.00        1     0.00     0.00  PopDataImporter::open()
  0.00     89.34     0.00        1     0.00     0.00  PopDataImporter::PopDataImporter(std::string)
  0.00     89.34     0.00        1     0.00     0.00  PopDataImporter::~PopDataImporter()
  0.00     89.34     0.00        1     0.00    89.16  Mcmc::run(unsigned long, EpiRisk::McmcWriter<EpiRisk::Population<TestCovars> >&)
  0.00     89.34     0.00        1     0.00     0.09  Mcmc::Mcmc(EpiRisk::Population<TestCovars>&, boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > >&, unsigned long)
  0.00     89.34     0.00        1     0.00     0.00  Mcmc::~Mcmc()
  0.00     89.34     0.00        1     0.00     0.00  boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::symmetric_matrix(unsigned long)
  0.00     89.34     0.00        1     0.00     0.00  EpiRisk::McmcWriter<EpiRisk::Population<TestCovars> >::open()
  0.00     89.34     0.00        1     0.00     0.00  EpiRisk::McmcWriter<EpiRisk::Population<TestCovars> >::close()
  0.00     89.34     0.00        1     0.00     0.00  EpiRisk::McmcWriter<EpiRisk::Population<TestCovars> >::~McmcWriter()
  0.00     89.34     0.00        1     0.00     0.00  EpiRisk::Population<TestCovars>::importEpiData(EpiRisk::DataImporter<EpiRisk::Events>&)
  0.00     89.34     0.00        1     0.00     0.00  EpiRisk::Population<TestCovars>::importPopData(EpiRisk::DataImporter<TestCovars>&)
  0.00     89.34     0.00        1     0.00     0.00  EpiRisk::Population<TestCovars>::Population()
  0.00     89.34     0.00        1     0.00     0.01  EpiRisk::Population<TestCovars>::~Population()
  0.00     89.34     0.00        1     0.00     0.00  EpiRisk::Random::Random(unsigned long)
  0.00     89.34     0.00        1     0.00     0.00  EpiRisk::Random::~Random()
  0.00     89.34     0.00        1     0.00     0.00  EpiRisk::EmpCovar<LogTransform>::EmpCovar(boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > > const&, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >)
  0.00     89.34     0.00        1     0.00     0.00  EpiRisk::EmpCovar<LogTransform>::~EmpCovar()
  0.00     89.34     0.00        1     0.00     0.00  Mcmc::getLogLikelihood() const
  0.00     89.34     0.00        1     0.00     0.00  double* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<double>(double const*, double const*, double*)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.01% of 89.34 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     99.9    0.00   89.26                 main [1]
                0.00   89.16       1/1           Mcmc::run(unsigned long, EpiRisk::McmcWriter<EpiRisk::Population<TestCovars> >&) [2]
                0.00    0.09       1/1           Mcmc::Mcmc(EpiRisk::Population<TestCovars>&, boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > >&, unsigned long) [13]
                0.00    0.01       1/1           EpiRisk::Population<TestCovars>::~Population() [19]
                0.00    0.00       1/1           EpiRisk::Population<TestCovars>::importPopData(EpiRisk::DataImporter<TestCovars>&) [21]
                0.00    0.00       1/1           EpiRisk::Population<TestCovars>::importEpiData(EpiRisk::DataImporter<EpiRisk::Events>&) [24]
                0.00    0.00       4/36240245     boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > >::operator()(unsigned long) [12]
                0.00    0.00       2/1007        std::map<std::string, double, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::operator[](std::string const&) [25]
                0.00    0.00       8/8           EpiRisk::UniformPrior::~UniformPrior() [83]
                0.00    0.00       8/7540        GammaPrior::clone() const [59]
                0.00    0.00       8/7540        GammaPrior::~GammaPrior() [58]
                0.00    0.00       4/4           EpiRisk::UniformPrior::clone() const [85]
                0.00    0.00       4/4004        EpiRisk::Parameter::~Parameter() [60]
                0.00    0.00       1/1           PopDataImporter::PopDataImporter(std::string) [93]
                0.00    0.00       1/1           EpiDataImporter::EpiDataImporter(std::string) [90]
                0.00    0.00       1/1           EpiRisk::Population<TestCovars>::Population() [100]
                0.00    0.00       1/1           PopDataImporter::~PopDataImporter() [94]
                0.00    0.00       1/1           EpiDataImporter::~EpiDataImporter() [91]
                0.00    0.00       1/1           EpiRisk::McmcWriter<EpiRisk::Population<TestCovars> >::~McmcWriter() [99]
                0.00    0.00       1/1           Mcmc::~Mcmc() [95]
                0.00    0.00       1/1122        std::_Rb_tree<std::string, std::pair<std::string const, double>, std::_Select1st<std::pair<std::string const, double> >, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, double> >*) [67]
-----------------------------------------------
                0.00   89.16       1/1           main [1]
[2]     99.8    0.00   89.16       1         Mcmc::run(unsigned long, EpiRisk::McmcWriter<EpiRisk::Population<TestCovars> >&) [2]
                0.00   89.10    1000/1000        Mcmc::updateTrans() [3]
                0.05    0.01    1000/1000        EpiRisk::McmcWriter<EpiRisk::Population<TestCovars> >::write(EpiRisk::Population<TestCovars>&) [15]
                0.00    0.00       1/962         EpiRisk::EmpCovar<LogTransform>::getCovariance() [10]
                0.00    0.00    1004/1007        std::map<std::string, double, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::operator[](std::string const&) [25]
                0.00    0.00    1000/1001        EpiRisk::EmpCovar<LogTransform>::sample() [69]
                0.00    0.00    1000/1000        EpiRisk::McmcWriter<EpiRisk::Population<TestCovars> >::write(boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > >&) [72]
                0.00    0.00      16/111592      boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::operator()(unsigned long, unsigned long) const [36]
                0.00    0.00       1/1           EpiRisk::McmcWriter<EpiRisk::Population<TestCovars> >::close() [98]
                0.00    0.00       1/1           EpiRisk::McmcWriter<EpiRisk::Population<TestCovars> >::open() [97]
-----------------------------------------------
                0.00   89.10    1000/1000        Mcmc::run(unsigned long, EpiRisk::McmcWriter<EpiRisk::Population<TestCovars> >&) [2]
[3]     99.7    0.00   89.10    1000         Mcmc::updateTrans() [3]
                0.46   87.07    1000/1001        Mcmc::calcLogLikelihood() [4]
                0.00    0.78     961/962         EpiRisk::EmpCovar<LogTransform>::getCovariance() [10]
                0.78    0.00     961/1924        boost::numeric::ublas::basic_row_major<unsigned long, long>::storage_size(unsigned long, unsigned long) [8]
                0.00    0.00   27064/36240245     boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > >::operator()(unsigned long) [12]
                0.00    0.00   19376/148628      boost::numeric::ublas::unbounded_array<double, std::allocator<double> >::operator[](unsigned long) [33]
                0.00    0.00   15376/111592      boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::operator()(unsigned long, unsigned long) const [36]
                0.00    0.00   15376/133075      boost::numeric::ublas::basic_row_major<unsigned long, long>::element(unsigned long, unsigned long, unsigned long, unsigned long) [35]
                0.00    0.00    8000/8000        GammaPrior::operator()(double) [57]
                0.00    0.00    7532/7540        GammaPrior::clone() const [59]
                0.00    0.00    7532/7540        GammaPrior::~GammaPrior() [58]
                0.00    0.00    4000/4004        EpiRisk::Parameter::~Parameter() [60]
                0.00    0.00    2000/2000        EpiRisk::Random::uniform(double, double) [65]
                0.00    0.00    1922/66987       unsigned long boost::numeric::ublas::same_impl_ex<unsigned long>(unsigned long const&, unsigned long const&, char const*, int) [37]
                0.00    0.00    1005/1005        EpiRisk::Random::mvgauss(boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > const&) [68]
                0.00    0.00    1000/1000        boost::numeric::ublas::unbounded_array<double, std::allocator<double> >::operator=(boost::numeric::ublas::unbounded_array<double, std::allocator<double> > const&) [70]
                0.00    0.00     117/1122        std::_Rb_tree<std::string, std::pair<std::string const, double>, std::_Select1st<std::pair<std::string const, double> >, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, double> >*) [67]
                0.00    0.00     117/118         std::_Rb_tree<std::string, std::pair<std::string const, double>, std::_Select1st<std::pair<std::string const, double> >, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::_M_copy(std::_Rb_tree_node<std::pair<std::string const, double> > const*, std::_Rb_tree_node<std::pair<std::string const, double> >*) [80]
                0.00    0.00       5/5           boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::~vector() [84]
-----------------------------------------------
                0.00    0.09       1/1001        Mcmc::Mcmc(EpiRisk::Population<TestCovars>&, boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > >&, unsigned long) [13]
                0.46   87.07    1000/1001        Mcmc::updateTrans() [3]
[4]     98.1    0.46   87.16    1001         Mcmc::calcLogLikelihood() [4]
               24.88   61.92 8644636/8644636     Mcmc::integPressureOn(boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<EpiRisk::Individual<TestCovars>, std::allocator<EpiRisk::Individual<TestCovars> > > > > > > > const&, double) [5]
                0.28    0.00 15399384/2010721713     Mcmc::beta(EpiRisk::Individual<TestCovars> const&, EpiRisk::Individual<TestCovars> const&) const [6]
                0.03    0.01  234234/234235      std::_Rb_tree<std::string, std::pair<std::string const, double>, std::_Select1st<std::pair<std::string const, double> >, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::_M_insert_unique(std::pair<std::string const, double> const&) [16]
                0.02    0.00 1502501/1996824830     Mcmc::betastar(EpiRisk::Individual<TestCovars> const&, EpiRisk::Individual<TestCovars> const&) const [7]
                0.01    0.00 3477474/180049400     EpiRisk::Individual<TestCovars>::getI() const [11]
                0.00    0.00  233233/36240245     boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > >::operator()(unsigned long) [12]
                0.00    0.00    1001/1122        std::_Rb_tree<std::string, std::pair<std::string const, double>, std::_Select1st<std::pair<std::string const, double> >, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, double> >*) [67]
                0.00    0.00    1001/35050       EpiRisk::Individual<TestCovars>::getId() const [39]
-----------------------------------------------
               24.88   61.92 8644636/8644636     Mcmc::calcLogLikelihood() [4]
[5]     97.2   24.88   61.92 8644636         Mcmc::integPressureOn(boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<EpiRisk::Individual<TestCovars>, std::allocator<EpiRisk::Individual<TestCovars> > > > > > > > const&, double) [5]
               36.82    0.09 1995322329/2010721713     Mcmc::beta(EpiRisk::Individual<TestCovars> const&, EpiRisk::Individual<TestCovars> const&) const [6]
               24.45    0.05 1995322329/1996824830     Mcmc::betastar(EpiRisk::Individual<TestCovars> const&, EpiRisk::Individual<TestCovars> const&) const [7]
                0.47    0.00 171679508/180049400     EpiRisk::Individual<TestCovars>::getI() const [11]
                0.04    0.00 8644636/36240245     boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > >::operator()(unsigned long) [12]
-----------------------------------------------
                0.28    0.00 15399384/2010721713     Mcmc::calcLogLikelihood() [4]
               36.82    0.09 1995322329/2010721713     Mcmc::integPressureOn(boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<EpiRisk::Individual<TestCovars>, std::allocator<EpiRisk::Individual<TestCovars> > > > > > > > const&, double) [5]
[6]     41.6   37.10    0.09 2010721713         Mcmc::beta(EpiRisk::Individual<TestCovars> const&, EpiRisk::Individual<TestCovars> const&) const [6]
                0.09    0.00 17503486/36240245     boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > >::operator()(unsigned long) [12]
-----------------------------------------------
                0.02    0.00 1502501/1996824830     Mcmc::calcLogLikelihood() [4]
               24.45    0.05 1995322329/1996824830     Mcmc::integPressureOn(boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<EpiRisk::Individual<TestCovars>, std::allocator<EpiRisk::Individual<TestCovars> > > > > > > > const&, double) [5]
[7]     27.4   24.47    0.05 1996824830         Mcmc::betastar(EpiRisk::Individual<TestCovars> const&, EpiRisk::Individual<TestCovars> const&) const [7]
                0.05    0.00 9831822/36240245     boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > >::operator()(unsigned long) [12]
-----------------------------------------------
                0.00    0.00       1/1924        Mcmc::Mcmc(EpiRisk::Population<TestCovars>&, boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > >&, unsigned long) [13]
                0.78    0.00     961/1924        Mcmc::updateTrans() [3]
                0.79    0.00     962/1924        void boost::numeric::ublas::matrix_assign<boost::numeric::ublas::scalar_assign, boost::numeric::ublas::basic_full<unsigned long>, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > >(boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >&, boost::numeric::ublas::matrix_expression<boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > > const&, boost::numeric::ublas::packed_proxy_tag, boost::numeric::ublas::row_major_tag) [9]
[8]      1.8    1.57    0.00    1924         boost::numeric::ublas::basic_row_major<unsigned long, long>::storage_size(unsigned long, unsigned long) [8]
-----------------------------------------------
                0.00    0.79     962/962         EpiRisk::EmpCovar<LogTransform>::getCovariance() [10]
[9]      0.9    0.00    0.79     962         void boost::numeric::ublas::matrix_assign<boost::numeric::ublas::scalar_assign, boost::numeric::ublas::basic_full<unsigned long>, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > >(boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >&, boost::numeric::ublas::matrix_expression<boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > > const&, boost::numeric::ublas::packed_proxy_tag, boost::numeric::ublas::row_major_tag) [9]
                0.79    0.00     962/1924        boost::numeric::ublas::basic_row_major<unsigned long, long>::storage_size(unsigned long, unsigned long) [8]
                0.00    0.00   65416/111592      boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::operator()(unsigned long, unsigned long) const [36]
                0.00    0.00   46176/133075      boost::numeric::ublas::basic_row_major<unsigned long, long>::element(unsigned long, unsigned long, unsigned long, unsigned long) [35]
                0.00    0.00   30784/198278      boost::numeric::ublas::unbounded_array<double, std::allocator<double> >::operator[](unsigned long) const [32]
                0.00    0.00   15392/148628      boost::numeric::ublas::unbounded_array<double, std::allocator<double> >::operator[](unsigned long) [33]
                0.00    0.00   13468/66987       unsigned long boost::numeric::ublas::same_impl_ex<unsigned long>(unsigned long const&, unsigned long const&, char const*, int) [37]
                0.00    0.00    9620/9620        Mcmc::dumpProdCache() [49]
                0.00    0.00    9620/29266       boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::operator()(unsigned long, unsigned long) [41]
                0.00    0.00    3848/3848        boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::iterator2::operator-(boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::iterator2 const&) const [63]
                0.00    0.00     962/962         void boost::numeric::ublas::indexing_matrix_assign<boost::numeric::ublas::scalar_assign, boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > >(boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >&, boost::numeric::ublas::matrix_expression<boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > > const&, boost::numeric::ublas::row_major_tag) [75]
                0.00    0.00     962/2927        __gnu_cxx::new_allocator<double>::allocate(unsigned long, void const*) [64]
-----------------------------------------------
                0.00    0.00       1/962         Mcmc::run(unsigned long, EpiRisk::McmcWriter<EpiRisk::Population<TestCovars> >&) [2]
                0.00    0.78     961/962         Mcmc::updateTrans() [3]
[10]     0.9    0.00    0.79     962         EpiRisk::EmpCovar<LogTransform>::getCovariance() [10]
                0.00    0.79     962/962         void boost::numeric::ublas::matrix_assign<boost::numeric::ublas::scalar_assign, boost::numeric::ublas::basic_full<unsigned long>, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > >(boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >&, boost::numeric::ublas::matrix_expression<boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > > const&, boost::numeric::ublas::packed_proxy_tag, boost::numeric::ublas::row_major_tag) [9]
                0.00    0.00   23088/148628      boost::numeric::ublas::unbounded_array<double, std::allocator<double> >::operator[](unsigned long) [33]
                0.00    0.00    9620/29266       boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::operator()(unsigned long, unsigned long) [41]
                0.00    0.00    3848/66987       unsigned long boost::numeric::ublas::same_impl_ex<unsigned long>(unsigned long const&, unsigned long const&, char const*, int) [37]
                0.00    0.00    3848/198278      boost::numeric::ublas::unbounded_array<double, std::allocator<double> >::operator[](unsigned long) const [32]
                0.00    0.00     962/965         unsigned long boost::numeric::ublas::basic_lower<unsigned long>::packed_size<boost::numeric::ublas::basic_row_major<unsigned long, long> >(boost::numeric::ublas::basic_row_major<unsigned long, long>, unsigned long, unsigned long) [74]
                0.00    0.00     962/2927        __gnu_cxx::new_allocator<double>::allocate(unsigned long, void const*) [64]
-----------------------------------------------
                0.00    0.00    5135/180049400     boost::multi_index::detail::ordered_index<boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, std::less<double>, boost::multi_index::detail::nth_layer<3, EpiRisk::Individual<TestCovars>, boost::multi_index::indexed_by<boost::multi_index::sequenced<boost::multi_index::tag<EpiRisk::Population<TestCovars>::bySeq, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na> >, boost::multi_index::hashed_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byId, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, mpl_::na, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byI, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byDiseaseStatus, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, mpl_::na, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<EpiRisk::Individual<TestCovars> > >, boost::mpl::v_item<EpiRisk::Population<TestCovars>::byI, boost::mpl::vector0<mpl_::na>, 0>, boost::multi_index::detail::ordered_non_unique_tag>::modify_rollback_(boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<EpiRisk::Individual<TestCovars>, std::allocator<EpiRisk::Individual<TestCovars> > > > >*) [23]
                0.00    0.00  187283/180049400     boost::multi_index::detail::hashed_index<boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, boost::hash<std::string>, std::equal_to<std::string>, boost::multi_index::detail::nth_layer<2, EpiRisk::Individual<TestCovars>, boost::multi_index::indexed_by<boost::multi_index::sequenced<boost::multi_index::tag<EpiRisk::Population<TestCovars>::bySeq, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na> >, boost::multi_index::hashed_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byId, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, mpl_::na, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byI, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byDiseaseStatus, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, mpl_::na, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<EpiRisk::Individual<TestCovars> > >, boost::mpl::v_item<EpiRisk::Population<TestCovars>::byId, boost::mpl::vector0<mpl_::na>, 0>, boost::multi_index::detail::hashed_unique_tag>::insert_(EpiRisk::Individual<TestCovars> const&, boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<EpiRisk::Individual<TestCovars>, std::allocator<EpiRisk::Individual<TestCovars> > > > > >*) [20]
                0.01    0.00 3477474/180049400     Mcmc::calcLogLikelihood() [4]
                0.01    0.00 4700000/180049400     EpiRisk::McmcWriter<EpiRisk::Population<TestCovars> >::write(EpiRisk::Population<TestCovars>&) [15]
                0.47    0.00 171679508/180049400     Mcmc::integPressureOn(boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<EpiRisk::Individual<TestCovars>, std::allocator<EpiRisk::Individual<TestCovars> > > > > > > > const&, double) [5]
[11]     0.6    0.50    0.00 180049400         EpiRisk::Individual<TestCovars>::getI() const [11]
-----------------------------------------------
                0.00    0.00       4/36240245     main [1]
                0.00    0.00   27064/36240245     Mcmc::updateTrans() [3]
                0.00    0.00  233233/36240245     Mcmc::calcLogLikelihood() [4]
                0.04    0.00 8644636/36240245     Mcmc::integPressureOn(boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<EpiRisk::Individual<TestCovars>, std::allocator<EpiRisk::Individual<TestCovars> > > > > > > > const&, double) [5]
                0.05    0.00 9831822/36240245     Mcmc::betastar(EpiRisk::Individual<TestCovars> const&, EpiRisk::Individual<TestCovars> const&) const [7]
                0.09    0.00 17503486/36240245     Mcmc::beta(EpiRisk::Individual<TestCovars> const&, EpiRisk::Individual<TestCovars> const&) const [6]
[12]     0.2    0.18    0.00 36240245         boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > >::operator()(unsigned long) [12]
-----------------------------------------------
                0.00    0.09       1/1           main [1]
[13]     0.1    0.00    0.09       1         Mcmc::Mcmc(EpiRisk::Population<TestCovars>&, boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > >&, unsigned long) [13]
                0.00    0.09       1/1001        Mcmc::calcLogLikelihood() [4]
                0.00    0.00       1/1924        boost::numeric::ublas::basic_row_major<unsigned long, long>::storage_size(unsigned long, unsigned long) [8]
                0.00    0.00      16/29266       boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::operator()(unsigned long, unsigned long) [41]
                0.00    0.00      16/148628      boost::numeric::ublas::unbounded_array<double, std::allocator<double> >::operator[](unsigned long) [33]
                0.00    0.00      16/133075      boost::numeric::ublas::basic_row_major<unsigned long, long>::element(unsigned long, unsigned long, unsigned long, unsigned long) [35]
                0.00    0.00       1/1           EpiRisk::Random::Random(unsigned long) [101]
                0.00    0.00       1/1           boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::symmetric_matrix(unsigned long) [96]
                0.00    0.00       1/1           EpiRisk::EmpCovar<LogTransform>::EmpCovar(boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > > const&, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >) [103]
                0.00    0.00       1/1122        std::_Rb_tree<std::string, std::pair<std::string const, double>, std::_Select1st<std::pair<std::string const, double> >, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, double> >*) [67]
                0.00    0.00       1/118         std::_Rb_tree<std::string, std::pair<std::string const, double>, std::_Select1st<std::pair<std::string const, double> >, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::_M_copy(std::_Rb_tree_node<std::pair<std::string const, double> > const*, std::_Rb_tree_node<std::pair<std::string const, double> >*) [80]
                0.00    0.00       1/1           double* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<double>(double const*, double const*, double*) [106]
-----------------------------------------------
                                                 <spontaneous>
[14]     0.1    0.08    0.00                 GammaPrior::~GammaPrior() [14]
-----------------------------------------------
                0.05    0.01    1000/1000        Mcmc::run(unsigned long, EpiRisk::McmcWriter<EpiRisk::Population<TestCovars> >&) [2]
[15]     0.1    0.05    0.01    1000         EpiRisk::McmcWriter<EpiRisk::Population<TestCovars> >::write(EpiRisk::Population<TestCovars>&) [15]
                0.01    0.00 4700000/180049400     EpiRisk::Individual<TestCovars>::getI() const [11]
-----------------------------------------------
                0.00    0.00       1/234235      std::_Rb_tree<std::string, std::pair<std::string const, double>, std::_Select1st<std::pair<std::string const, double> >, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<std::string const, double> >, std::pair<std::string const, double> const&) [26]
                0.03    0.01  234234/234235      Mcmc::calcLogLikelihood() [4]
[16]     0.0    0.03    0.01  234235         std::_Rb_tree<std::string, std::pair<std::string const, double>, std::_Select1st<std::pair<std::string const, double> >, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::_M_insert_unique(std::pair<std::string const, double> const&) [16]
                0.01    0.00  234235/234236      std::_Rb_tree<std::string, std::pair<std::string const, double>, std::_Select1st<std::pair<std::string const, double> >, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, double> const&) [17]
-----------------------------------------------
                0.00    0.00       1/234236      std::_Rb_tree<std::string, std::pair<std::string const, double>, std::_Select1st<std::pair<std::string const, double> >, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<std::string const, double> >, std::pair<std::string const, double> const&) [26]
                0.01    0.00  234235/234236      std::_Rb_tree<std::string, std::pair<std::string const, double>, std::_Select1st<std::pair<std::string const, double> >, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::_M_insert_unique(std::pair<std::string const, double> const&) [16]
[17]     0.0    0.01    0.00  234236         std::_Rb_tree<std::string, std::pair<std::string const, double>, std::_Select1st<std::pair<std::string const, double> >, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, double> const&) [17]
-----------------------------------------------
                0.01    0.00    8636/8636        EpiRisk::Population<TestCovars>::~Population() [19]
[18]     0.0    0.01    0.00    8636         EpiRisk::Individual<TestCovars>::~Individual() [18]
                0.00    0.00    8636/17272       std::_Rb_tree<EpiRisk::Contact<EpiRisk::Individual<TestCovars> >, EpiRisk::Contact<EpiRisk::Individual<TestCovars> >, std::_Identity<EpiRisk::Contact<EpiRisk::Individual<TestCovars> > >, std::less<EpiRisk::Contact<EpiRisk::Individual<TestCovars> > >, std::allocator<EpiRisk::Contact<EpiRisk::Individual<TestCovars> > > >::_M_erase(std::_Rb_tree_node<EpiRisk::Contact<EpiRisk::Individual<TestCovars> > >*) [44]
-----------------------------------------------
                0.00    0.01       1/1           main [1]
[19]     0.0    0.00    0.01       1         EpiRisk::Population<TestCovars>::~Population() [19]
                0.01    0.00    8636/8636        EpiRisk::Individual<TestCovars>::~Individual() [18]
-----------------------------------------------
                0.00    0.00    8636/8636        EpiRisk::Population<TestCovars>::importPopData(EpiRisk::DataImporter<TestCovars>&) [21]
[20]     0.0    0.00    0.00    8636         boost::multi_index::detail::hashed_index<boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, boost::hash<std::string>, std::equal_to<std::string>, boost::multi_index::detail::nth_layer<2, EpiRisk::Individual<TestCovars>, boost::multi_index::indexed_by<boost::multi_index::sequenced<boost::multi_index::tag<EpiRisk::Population<TestCovars>::bySeq, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na> >, boost::multi_index::hashed_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byId, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, mpl_::na, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byI, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byDiseaseStatus, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, mpl_::na, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<EpiRisk::Individual<TestCovars> > >, boost::mpl::v_item<EpiRisk::Population<TestCovars>::byId, boost::mpl::vector0<mpl_::na>, 0>, boost::multi_index::detail::hashed_unique_tag>::insert_(EpiRisk::Individual<TestCovars> const&, boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<EpiRisk::Individual<TestCovars>, std::allocator<EpiRisk::Individual<TestCovars> > > > > >*) [20]
                0.00    0.00  187283/180049400     EpiRisk::Individual<TestCovars>::getI() const [11]
                0.00    0.00   33078/35050       EpiRisk::Individual<TestCovars>::getId() const [39]
                0.00    0.00   20910/38882       EpiRisk::Individual<TestCovars>::hasBeenInfected() const [38]
                0.00    0.00    8636/8636        boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>::operator()(EpiRisk::Individual<TestCovars> const&) const [56]
                0.00    0.00    8636/8636        boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>::operator()(EpiRisk::Individual<TestCovars> const&) const [55]
                0.00    0.00    8636/8636        boost::multi_index::detail::hashed_index<boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, boost::hash<bool>, std::equal_to<bool>, boost::multi_index::detail::nth_layer<4, EpiRisk::Individual<TestCovars>, boost::multi_index::indexed_by<boost::multi_index::sequenced<boost::multi_index::tag<EpiRisk::Population<TestCovars>::bySeq, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na> >, boost::multi_index::hashed_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byId, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, mpl_::na, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byI, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byDiseaseStatus, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, mpl_::na, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<EpiRisk::Individual<TestCovars> > >, boost::mpl::v_item<EpiRisk::Population<TestCovars>::byDiseaseStatus, boost::mpl::vector0<mpl_::na>, 0>, boost::multi_index::detail::hashed_non_unique_tag>::link_point(EpiRisk::Individual<TestCovars> const&, boost::multi_index::detail::hashed_index_node_impl<std::allocator<char> >*&, boost::multi_index::detail::hashed_non_unique_tag) [53]
                0.00    0.00    8636/8870        boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >::link(boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*, boost::multi_index::detail::ordered_index_side, boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*, boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*) [51]
                0.00    0.00    8636/8636        void boost::detail::allocator::construct<EpiRisk::Individual<TestCovars> >(void*, EpiRisk::Individual<TestCovars> const&) [54]
                0.00    0.00      16/16          __gnu_cxx::new_allocator<unsigned long>::allocate(unsigned long, void const*) [81]
                0.00    0.00       8/8           boost::multi_index::detail::bucket_array<std::allocator<EpiRisk::Individual<TestCovars> > >::bucket_array(std::allocator<EpiRisk::Individual<TestCovars> > const&, boost::multi_index::detail::hashed_index_node_impl<std::allocator<char> >*, unsigned long) [82]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[21]     0.0    0.00    0.00       1         EpiRisk::Population<TestCovars>::importPopData(EpiRisk::DataImporter<TestCovars>&) [21]
                0.00    0.00    8636/8636        boost::multi_index::detail::hashed_index<boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, boost::hash<std::string>, std::equal_to<std::string>, boost::multi_index::detail::nth_layer<2, EpiRisk::Individual<TestCovars>, boost::multi_index::indexed_by<boost::multi_index::sequenced<boost::multi_index::tag<EpiRisk::Population<TestCovars>::bySeq, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na> >, boost::multi_index::hashed_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byId, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, mpl_::na, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byI, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byDiseaseStatus, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, mpl_::na, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<EpiRisk::Individual<TestCovars> > >, boost::mpl::v_item<EpiRisk::Population<TestCovars>::byId, boost::mpl::vector0<mpl_::na>, 0>, boost::multi_index::detail::hashed_unique_tag>::insert_(EpiRisk::Individual<TestCovars> const&, boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<EpiRisk::Individual<TestCovars>, std::allocator<EpiRisk::Individual<TestCovars> > > > > >*) [20]
                0.00    0.00    8637/8637        PopDataImporter::next() [52]
                0.00    0.00    8636/17272       std::_Rb_tree<EpiRisk::Contact<EpiRisk::Individual<TestCovars> >, EpiRisk::Contact<EpiRisk::Individual<TestCovars> >, std::_Identity<EpiRisk::Contact<EpiRisk::Individual<TestCovars> > >, std::less<EpiRisk::Contact<EpiRisk::Individual<TestCovars> > >, std::allocator<EpiRisk::Contact<EpiRisk::Individual<TestCovars> > > >::_M_erase(std::_Rb_tree_node<EpiRisk::Contact<EpiRisk::Individual<TestCovars> > >*) [44]
                0.00    0.00       1/1           PopDataImporter::open() [92]
-----------------------------------------------
                0.00    0.00     234/234         EpiRisk::Population<TestCovars>::importEpiData(EpiRisk::DataImporter<EpiRisk::Events>&) [24]
[22]     0.0    0.00    0.00     234         bool boost::multi_index::multi_index_container<EpiRisk::Individual<TestCovars>, boost::multi_index::indexed_by<boost::multi_index::sequenced<boost::multi_index::tag<EpiRisk::Population<TestCovars>::bySeq, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na> >, boost::multi_index::hashed_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byId, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, mpl_::na, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byI, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byDiseaseStatus, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, mpl_::na, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<EpiRisk::Individual<TestCovars> > >::modify_<EpiRisk::Population<TestCovars>::modifyEvents, EpiRisk::Population<TestCovars>::modifyEvents>(EpiRisk::Population<TestCovars>::modifyEvents&, EpiRisk::Population<TestCovars>::modifyEvents&, boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<EpiRisk::Individual<TestCovars>, std::allocator<EpiRisk::Individual<TestCovars> > > > > > >*) [22]
                0.00    0.00     234/234         boost::multi_index::detail::ordered_index<boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, std::less<double>, boost::multi_index::detail::nth_layer<3, EpiRisk::Individual<TestCovars>, boost::multi_index::indexed_by<boost::multi_index::sequenced<boost::multi_index::tag<EpiRisk::Population<TestCovars>::bySeq, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na> >, boost::multi_index::hashed_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byId, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, mpl_::na, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byI, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byDiseaseStatus, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, mpl_::na, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<EpiRisk::Individual<TestCovars> > >, boost::mpl::v_item<EpiRisk::Population<TestCovars>::byI, boost::mpl::vector0<mpl_::na>, 0>, boost::multi_index::detail::ordered_non_unique_tag>::modify_rollback_(boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<EpiRisk::Individual<TestCovars>, std::allocator<EpiRisk::Individual<TestCovars> > > > >*) [23]
                0.00    0.00     642/35050       EpiRisk::Individual<TestCovars>::getId() const [39]
-----------------------------------------------
                0.00    0.00     234/234         bool boost::multi_index::multi_index_container<EpiRisk::Individual<TestCovars>, boost::multi_index::indexed_by<boost::multi_index::sequenced<boost::multi_index::tag<EpiRisk::Population<TestCovars>::bySeq, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na> >, boost::multi_index::hashed_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byId, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, mpl_::na, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byI, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byDiseaseStatus, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, mpl_::na, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<EpiRisk::Individual<TestCovars> > >::modify_<EpiRisk::Population<TestCovars>::modifyEvents, EpiRisk::Population<TestCovars>::modifyEvents>(EpiRisk::Population<TestCovars>::modifyEvents&, EpiRisk::Population<TestCovars>::modifyEvents&, boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<EpiRisk::Individual<TestCovars>, std::allocator<EpiRisk::Individual<TestCovars> > > > > > >*) [22]
[23]     0.0    0.00    0.00     234         boost::multi_index::detail::ordered_index<boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, std::less<double>, boost::multi_index::detail::nth_layer<3, EpiRisk::Individual<TestCovars>, boost::multi_index::indexed_by<boost::multi_index::sequenced<boost::multi_index::tag<EpiRisk::Population<TestCovars>::bySeq, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na> >, boost::multi_index::hashed_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byId, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, mpl_::na, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byI, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byDiseaseStatus, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, mpl_::na, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<EpiRisk::Individual<TestCovars> > >, boost::mpl::v_item<EpiRisk::Population<TestCovars>::byI, boost::mpl::vector0<mpl_::na>, 0>, boost::multi_index::detail::ordered_non_unique_tag>::modify_rollback_(boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<EpiRisk::Individual<TestCovars>, std::allocator<EpiRisk::Individual<TestCovars> > > > >*) [23]
                0.00    0.00    5135/180049400     EpiRisk::Individual<TestCovars>::getI() const [11]
                0.00    0.00     234/234         boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >::rebalance_for_erase(boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*, boost::multi_index::detail::ordered_index_node_compressed_base<std::allocator<char> >::parent_ref, boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*&, boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*&) [79]
                0.00    0.00     234/234         boost::multi_index::detail::hashed_index<boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, boost::hash<bool>, std::equal_to<bool>, boost::multi_index::detail::nth_layer<4, EpiRisk::Individual<TestCovars>, boost::multi_index::indexed_by<boost::multi_index::sequenced<boost::multi_index::tag<EpiRisk::Population<TestCovars>::bySeq, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na> >, boost::multi_index::hashed_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byId, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, mpl_::na, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byI, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byDiseaseStatus, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, mpl_::na, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<EpiRisk::Individual<TestCovars> > >, boost::mpl::v_item<EpiRisk::Population<TestCovars>::byDiseaseStatus, boost::mpl::vector0<mpl_::na>, 0>, boost::multi_index::detail::hashed_non_unique_tag>::modify_rollback_(boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<EpiRisk::Individual<TestCovars>, std::allocator<EpiRisk::Individual<TestCovars> > > >*) [78]
                0.00    0.00     234/8870        boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >::link(boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*, boost::multi_index::detail::ordered_index_side, boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*, boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*) [51]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[24]     0.0    0.00    0.00       1         EpiRisk::Population<TestCovars>::importEpiData(EpiRisk::DataImporter<EpiRisk::Events>&) [24]
                0.00    0.00     234/234         bool boost::multi_index::multi_index_container<EpiRisk::Individual<TestCovars>, boost::multi_index::indexed_by<boost::multi_index::sequenced<boost::multi_index::tag<EpiRisk::Population<TestCovars>::bySeq, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na> >, boost::multi_index::hashed_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byId, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, mpl_::na, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byI, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byDiseaseStatus, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, mpl_::na, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<EpiRisk::Individual<TestCovars> > >::modify_<EpiRisk::Population<TestCovars>::modifyEvents, EpiRisk::Population<TestCovars>::modifyEvents>(EpiRisk::Population<TestCovars>::modifyEvents&, EpiRisk::Population<TestCovars>::modifyEvents&, boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<EpiRisk::Individual<TestCovars>, std::allocator<EpiRisk::Individual<TestCovars> > > > > > >*) [22]
                0.00    0.00     329/35050       EpiRisk::Individual<TestCovars>::getId() const [39]
                0.00    0.00     235/235         EpiDataImporter::next() [77]
                0.00    0.00       1/1           EpiDataImporter::open() [89]
-----------------------------------------------
                0.00    0.00       1/1007        __do_global_ctors_aux [27]
                0.00    0.00       2/1007        main [1]
                0.00    0.00    1004/1007        Mcmc::run(unsigned long, EpiRisk::McmcWriter<EpiRisk::Population<TestCovars> >&) [2]
[25]     0.0    0.00    0.00    1007         std::map<std::string, double, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::operator[](std::string const&) [25]
                0.00    0.00       2/2           std::_Rb_tree<std::string, std::pair<std::string const, double>, std::_Select1st<std::pair<std::string const, double> >, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<std::string const, double> >, std::pair<std::string const, double> const&) [26]
-----------------------------------------------
                0.00    0.00       2/2           std::map<std::string, double, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::operator[](std::string const&) [25]
[26]     0.0    0.00    0.00       2         std::_Rb_tree<std::string, std::pair<std::string const, double>, std::_Select1st<std::pair<std::string const, double> >, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<std::string const, double> >, std::pair<std::string const, double> const&) [26]
                0.00    0.00       1/234235      std::_Rb_tree<std::string, std::pair<std::string const, double>, std::_Select1st<std::pair<std::string const, double> >, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::_M_insert_unique(std::pair<std::string const, double> const&) [16]
                0.00    0.00       1/234236      std::_Rb_tree<std::string, std::pair<std::string const, double>, std::_Select1st<std::pair<std::string const, double> >, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, double> const&) [17]
-----------------------------------------------
                                                 <spontaneous>
[27]     0.0    0.00    0.00                 __do_global_ctors_aux [27]
                0.00    0.00       1/1007        std::map<std::string, double, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::operator[](std::string const&) [25]
                0.00    0.00       2/20078       EpiRisk::Random::Random(unsigned long) [43]
                0.00    0.00       1/1           global constructors keyed to main [88]
                0.00    0.00       1/3           std::vector<std::string, std::allocator<std::string> >::~vector() [86]
                0.00    0.00       1/1           Mcmc::getLogLikelihood() const [105]
-----------------------------------------------
                0.00    0.00    3848/198278      EpiRisk::EmpCovar<LogTransform>::getCovariance() [10]
                0.00    0.00   20054/198278      boost::numeric::ublas::vector_scalar_binary_traits<boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >, boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >, boost::numeric::ublas::vector_inner_prod<boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >, boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >, boost::numeric::ublas::promote_traits<boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >::value_type, boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >::value_type>::promote_type> >::result_type boost::numeric::ublas::inner_prod<boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >, boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > > >(boost::numeric::ublas::vector_expression<boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > > > const&, boost::numeric::ublas::vector_expression<boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > > > const&) [47]
                0.00    0.00   30784/198278      void boost::numeric::ublas::matrix_assign<boost::numeric::ublas::scalar_assign, boost::numeric::ublas::basic_full<unsigned long>, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > >(boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >&, boost::numeric::ublas::matrix_expression<boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > > const&, boost::numeric::ublas::packed_proxy_tag, boost::numeric::ublas::row_major_tag) [9]
                0.00    0.00   32000/198278      void boost::numeric::ublas::indexing_vector_assign<boost::numeric::ublas::scalar_assign, boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_vector_binary1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_vector_prod1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double> > >(boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >&, boost::numeric::ublas::vector_expression<boost::numeric::ublas::matrix_vector_binary1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_vector_prod1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double> > > const&) [71]
                0.00    0.00  111592/198278      boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::operator()(unsigned long, unsigned long) const [36]
[32]     0.0    0.00    0.00  198278         boost::numeric::ublas::unbounded_array<double, std::allocator<double> >::operator[](unsigned long) const [32]
-----------------------------------------------
                0.00    0.00      16/148628      Mcmc::Mcmc(EpiRisk::Population<TestCovars>&, boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > >&, unsigned long) [13]
                0.00    0.00    4000/148628      void boost::numeric::ublas::indexing_vector_assign<boost::numeric::ublas::scalar_assign, boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_vector_binary1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_vector_prod1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double> > >(boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >&, boost::numeric::ublas::vector_expression<boost::numeric::ublas::matrix_vector_binary1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_vector_prod1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double> > > const&) [71]
                0.00    0.00    4004/148628      EpiRisk::EmpCovar<LogTransform>::sample() [69]
                0.00    0.00   15392/148628      void boost::numeric::ublas::indexing_matrix_assign<boost::numeric::ublas::scalar_assign, boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > >(boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >&, boost::numeric::ublas::matrix_expression<boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > > const&, boost::numeric::ublas::row_major_tag) [75]
                0.00    0.00   15392/148628      void boost::numeric::ublas::matrix_assign<boost::numeric::ublas::scalar_assign, boost::numeric::ublas::basic_full<unsigned long>, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > >(boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >&, boost::numeric::ublas::matrix_expression<boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > > const&, boost::numeric::ublas::packed_proxy_tag, boost::numeric::ublas::row_major_tag) [9]
                0.00    0.00   19376/148628      Mcmc::updateTrans() [3]
                0.00    0.00   23088/148628      EpiRisk::EmpCovar<LogTransform>::getCovariance() [10]
                0.00    0.00   29266/148628      boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::operator()(unsigned long, unsigned long) [41]
                0.00    0.00   38094/148628      EpiRisk::Random::mvgauss(boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > const&) [68]
[33]     0.0    0.00    0.00  148628         boost::numeric::ublas::unbounded_array<double, std::allocator<double> >::operator[](unsigned long) [33]
-----------------------------------------------
                0.00    0.00   29266/140858      boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::operator()(unsigned long, unsigned long) [41]
                0.00    0.00  111592/140858      boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::operator()(unsigned long, unsigned long) const [36]
[34]     0.0    0.00    0.00  140858         boost::numeric::ublas::basic_row_major<unsigned long, long>::lower_element(unsigned long, unsigned long, unsigned long, unsigned long) [34]
-----------------------------------------------
                0.00    0.00      16/133075      Mcmc::Mcmc(EpiRisk::Population<TestCovars>&, boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > >&, unsigned long) [13]
                0.00    0.00   15376/133075      Mcmc::updateTrans() [3]
                0.00    0.00   15392/133075      void boost::numeric::ublas::indexing_matrix_assign<boost::numeric::ublas::scalar_assign, boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > >(boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >&, boost::numeric::ublas::matrix_expression<boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > > const&, boost::numeric::ublas::row_major_tag) [75]
                0.00    0.00   16000/133075      void boost::numeric::ublas::indexing_vector_assign<boost::numeric::ublas::scalar_assign, boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_vector_binary1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_vector_prod1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double> > >(boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >&, boost::numeric::ublas::vector_expression<boost::numeric::ublas::matrix_vector_binary1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_vector_prod1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double> > > const&) [71]
                0.00    0.00   20054/133075      boost::numeric::ublas::vector_scalar_binary_traits<boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >, boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >, boost::numeric::ublas::vector_inner_prod<boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >, boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >, boost::numeric::ublas::promote_traits<boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >::value_type, boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >::value_type>::promote_type> >::result_type boost::numeric::ublas::inner_prod<boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >, boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > > >(boost::numeric::ublas::vector_expression<boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > > > const&, boost::numeric::ublas::vector_expression<boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > > > const&) [47]
                0.00    0.00   20061/133075      EpiRisk::Random::mvgauss(boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > const&) [68]
                0.00    0.00   46176/133075      void boost::numeric::ublas::matrix_assign<boost::numeric::ublas::scalar_assign, boost::numeric::ublas::basic_full<unsigned long>, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > >(boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >&, boost::numeric::ublas::matrix_expression<boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > > const&, boost::numeric::ublas::packed_proxy_tag, boost::numeric::ublas::row_major_tag) [9]
[35]     0.0    0.00    0.00  133075         boost::numeric::ublas::basic_row_major<unsigned long, long>::element(unsigned long, unsigned long, unsigned long, unsigned long) [35]
-----------------------------------------------
                0.00    0.00      16/111592      Mcmc::run(unsigned long, EpiRisk::McmcWriter<EpiRisk::Population<TestCovars> >&) [2]
                0.00    0.00   15376/111592      Mcmc::updateTrans() [3]
                0.00    0.00   30784/111592      void boost::numeric::ublas::indexing_matrix_assign<boost::numeric::ublas::scalar_assign, boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > >(boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >&, boost::numeric::ublas::matrix_expression<boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > > const&, boost::numeric::ublas::row_major_tag) [75]
                0.00    0.00   65416/111592      void boost::numeric::ublas::matrix_assign<boost::numeric::ublas::scalar_assign, boost::numeric::ublas::basic_full<unsigned long>, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > >(boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >&, boost::numeric::ublas::matrix_expression<boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > > const&, boost::numeric::ublas::packed_proxy_tag, boost::numeric::ublas::row_major_tag) [9]
[36]     0.0    0.00    0.00  111592         boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::operator()(unsigned long, unsigned long) const [36]
                0.00    0.00  111592/140858      boost::numeric::ublas::basic_row_major<unsigned long, long>::lower_element(unsigned long, unsigned long, unsigned long, unsigned long) [34]
                0.00    0.00  111592/198278      boost::numeric::ublas::unbounded_array<double, std::allocator<double> >::operator[](unsigned long) const [32]
-----------------------------------------------
                0.00    0.00       1/66987       boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::symmetric_matrix(unsigned long) [96]
                0.00    0.00       2/66987       EpiRisk::EmpCovar<LogTransform>::EmpCovar(boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > > const&, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >) [103]
                0.00    0.00    1922/66987       Mcmc::updateTrans() [3]
                0.00    0.00    3848/66987       void boost::numeric::ublas::indexing_matrix_assign<boost::numeric::ublas::scalar_assign, boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > >(boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >&, boost::numeric::ublas::matrix_expression<boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > > const&, boost::numeric::ublas::row_major_tag) [75]
                0.00    0.00    3848/66987       EpiRisk::EmpCovar<LogTransform>::getCovariance() [10]
                0.00    0.00    5000/66987       void boost::numeric::ublas::indexing_vector_assign<boost::numeric::ublas::scalar_assign, boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_vector_binary1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_vector_prod1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double> > >(boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >&, boost::numeric::ublas::vector_expression<boost::numeric::ublas::matrix_vector_binary1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_vector_prod1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double> > > const&) [71]
                0.00    0.00   10038/66987       boost::numeric::ublas::vector_scalar_binary_traits<boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >, boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >, boost::numeric::ublas::vector_inner_prod<boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >, boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >, boost::numeric::ublas::promote_traits<boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >::value_type, boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >::value_type>::promote_type> >::result_type boost::numeric::ublas::inner_prod<boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >, boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > > >(boost::numeric::ublas::vector_expression<boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > > > const&, boost::numeric::ublas::vector_expression<boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > > > const&) [47]
                0.00    0.00   13468/66987       void boost::numeric::ublas::matrix_assign<boost::numeric::ublas::scalar_assign, boost::numeric::ublas::basic_full<unsigned long>, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > >(boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >&, boost::numeric::ublas::matrix_expression<boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > > const&, boost::numeric::ublas::packed_proxy_tag, boost::numeric::ublas::row_major_tag) [9]
                0.00    0.00   28860/66987       Mcmc::dumpProdCache() [49]
[37]     0.0    0.00    0.00   66987         unsigned long boost::numeric::ublas::same_impl_ex<unsigned long>(unsigned long const&, unsigned long const&, char const*, int) [37]
-----------------------------------------------
                0.00    0.00     702/38882       boost::multi_index::detail::hashed_index<boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, boost::hash<bool>, std::equal_to<bool>, boost::multi_index::detail::nth_layer<4, EpiRisk::Individual<TestCovars>, boost::multi_index::indexed_by<boost::multi_index::sequenced<boost::multi_index::tag<EpiRisk::Population<TestCovars>::bySeq, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na> >, boost::multi_index::hashed_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byId, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, mpl_::na, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byI, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byDiseaseStatus, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, mpl_::na, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<EpiRisk::Individual<TestCovars> > >, boost::mpl::v_item<EpiRisk::Population<TestCovars>::byDiseaseStatus, boost::mpl::vector0<mpl_::na>, 0>, boost::multi_index::detail::hashed_non_unique_tag>::modify_rollback_(boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<EpiRisk::Individual<TestCovars>, std::allocator<EpiRisk::Individual<TestCovars> > > >*) [78]
                0.00    0.00   17270/38882       boost::multi_index::detail::hashed_index<boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, boost::hash<bool>, std::equal_to<bool>, boost::multi_index::detail::nth_layer<4, EpiRisk::Individual<TestCovars>, boost::multi_index::indexed_by<boost::multi_index::sequenced<boost::multi_index::tag<EpiRisk::Population<TestCovars>::bySeq, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na> >, boost::multi_index::hashed_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byId, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, mpl_::na, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byI, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byDiseaseStatus, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, mpl_::na, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<EpiRisk::Individual<TestCovars> > >, boost::mpl::v_item<EpiRisk::Population<TestCovars>::byDiseaseStatus, boost::mpl::vector0<mpl_::na>, 0>, boost::multi_index::detail::hashed_non_unique_tag>::link_point(EpiRisk::Individual<TestCovars> const&, boost::multi_index::detail::hashed_index_node_impl<std::allocator<char> >*&, boost::multi_index::detail::hashed_non_unique_tag) [53]
                0.00    0.00   20910/38882       boost::multi_index::detail::hashed_index<boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, boost::hash<std::string>, std::equal_to<std::string>, boost::multi_index::detail::nth_layer<2, EpiRisk::Individual<TestCovars>, boost::multi_index::indexed_by<boost::multi_index::sequenced<boost::multi_index::tag<EpiRisk::Population<TestCovars>::bySeq, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na> >, boost::multi_index::hashed_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byId, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, mpl_::na, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byI, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byDiseaseStatus, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, mpl_::na, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<EpiRisk::Individual<TestCovars> > >, boost::mpl::v_item<EpiRisk::Population<TestCovars>::byId, boost::mpl::vector0<mpl_::na>, 0>, boost::multi_index::detail::hashed_unique_tag>::insert_(EpiRisk::Individual<TestCovars> const&, boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<EpiRisk::Individual<TestCovars>, std::allocator<EpiRisk::Individual<TestCovars> > > > > >*) [20]
[38]     0.0    0.00    0.00   38882         EpiRisk::Individual<TestCovars>::hasBeenInfected() const [38]
-----------------------------------------------
                0.00    0.00     329/35050       EpiRisk::Population<TestCovars>::importEpiData(EpiRisk::DataImporter<EpiRisk::Events>&) [24]
                0.00    0.00     642/35050       bool boost::multi_index::multi_index_container<EpiRisk::Individual<TestCovars>, boost::multi_index::indexed_by<boost::multi_index::sequenced<boost::multi_index::tag<EpiRisk::Population<TestCovars>::bySeq, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na> >, boost::multi_index::hashed_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byId, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, mpl_::na, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byI, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byDiseaseStatus, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, mpl_::na, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<EpiRisk::Individual<TestCovars> > >::modify_<EpiRisk::Population<TestCovars>::modifyEvents, EpiRisk::Population<TestCovars>::modifyEvents>(EpiRisk::Population<TestCovars>::modifyEvents&, EpiRisk::Population<TestCovars>::modifyEvents&, boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<EpiRisk::Individual<TestCovars>, std::allocator<EpiRisk::Individual<TestCovars> > > > > > >*) [22]
                0.00    0.00    1001/35050       Mcmc::calcLogLikelihood() [4]
                0.00    0.00   33078/35050       boost::multi_index::detail::hashed_index<boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, boost::hash<std::string>, std::equal_to<std::string>, boost::multi_index::detail::nth_layer<2, EpiRisk::Individual<TestCovars>, boost::multi_index::indexed_by<boost::multi_index::sequenced<boost::multi_index::tag<EpiRisk::Population<TestCovars>::bySeq, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na> >, boost::multi_index::hashed_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byId, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, mpl_::na, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byI, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byDiseaseStatus, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, mpl_::na, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<EpiRisk::Individual<TestCovars> > >, boost::mpl::v_item<EpiRisk::Population<TestCovars>::byId, boost::mpl::vector0<mpl_::na>, 0>, boost::multi_index::detail::hashed_unique_tag>::insert_(EpiRisk::Individual<TestCovars> const&, boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<EpiRisk::Individual<TestCovars>, std::allocator<EpiRisk::Individual<TestCovars> > > > > >*) [20]
[39]     0.0    0.00    0.00   35050         EpiRisk::Individual<TestCovars>::getId() const [39]
-----------------------------------------------
                0.00    0.00   15392/30784       Mcmc::dumpProdCache() [49]
                0.00    0.00   15392/30784       boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >::const_iterator2::operator==(boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >::const_iterator2 const&) const [45]
[40]     0.0    0.00    0.00   30784         boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::const_iterator2::operator==(boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::const_iterator2 const&) const [40]
-----------------------------------------------
                0.00    0.00      16/29266       Mcmc::Mcmc(EpiRisk::Population<TestCovars>&, boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > >&, unsigned long) [13]
                0.00    0.00    9620/29266       void boost::numeric::ublas::matrix_assign<boost::numeric::ublas::scalar_assign, boost::numeric::ublas::basic_full<unsigned long>, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > >(boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >&, boost::numeric::ublas::matrix_expression<boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > > const&, boost::numeric::ublas::packed_proxy_tag, boost::numeric::ublas::row_major_tag) [9]
                0.00    0.00    9620/29266       EpiRisk::EmpCovar<LogTransform>::getCovariance() [10]
                0.00    0.00   10010/29266       EpiRisk::EmpCovar<LogTransform>::sample() [69]
[41]     0.0    0.00    0.00   29266         boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::operator()(unsigned long, unsigned long) [41]
                0.00    0.00   29266/140858      boost::numeric::ublas::basic_row_major<unsigned long, long>::lower_element(unsigned long, unsigned long, unsigned long, unsigned long) [34]
                0.00    0.00   29266/148628      boost::numeric::ublas::unbounded_array<double, std::allocator<double> >::operator[](unsigned long) [33]
-----------------------------------------------
                0.00    0.00   26612/26612       stlStrTok(std::vector<std::string, std::allocator<std::string> >&, std::string, char const*) [50]
[42]     0.0    0.00    0.00   26612         std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&) [42]
-----------------------------------------------
                0.00    0.00       2/20078       __do_global_ctors_aux [27]
                0.00    0.00   20076/20078       EpiRisk::Random::mvgauss(boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > const&) [68]
[43]     0.0    0.00    0.00   20078         EpiRisk::Random::Random(unsigned long) [43]
-----------------------------------------------
                0.00    0.00    8636/17272       EpiRisk::Individual<TestCovars>::~Individual() [18]
                0.00    0.00    8636/17272       EpiRisk::Population<TestCovars>::importPopData(EpiRisk::DataImporter<TestCovars>&) [21]
[44]     0.0    0.00    0.00   17272         std::_Rb_tree<EpiRisk::Contact<EpiRisk::Individual<TestCovars> >, EpiRisk::Contact<EpiRisk::Individual<TestCovars> >, std::_Identity<EpiRisk::Contact<EpiRisk::Individual<TestCovars> > >, std::less<EpiRisk::Contact<EpiRisk::Individual<TestCovars> > >, std::allocator<EpiRisk::Contact<EpiRisk::Individual<TestCovars> > > >::_M_erase(std::_Rb_tree_node<EpiRisk::Contact<EpiRisk::Individual<TestCovars> > >*) [44]
-----------------------------------------------
                0.00    0.00   15392/15392       Mcmc::dumpProdCache() [49]
[45]     0.0    0.00    0.00   15392         boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >::const_iterator2::operator==(boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >::const_iterator2 const&) const [45]
                0.00    0.00   15392/30784       boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::const_iterator2::operator==(boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::const_iterator2 const&) const [40]
-----------------------------------------------
                0.00    0.00   13924/13924       std::_Rb_tree<std::string, std::pair<std::string const, double>, std::_Select1st<std::pair<std::string const, double> >, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::_M_copy(std::_Rb_tree_node<std::pair<std::string const, double> > const*, std::_Rb_tree_node<std::pair<std::string const, double> >*) [80]
[46]     0.0    0.00    0.00   13924         std::_Rb_tree<std::string, std::pair<std::string const, double>, std::_Select1st<std::pair<std::string const, double> >, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::_M_create_node(std::pair<std::string const, double> const&) [46]
-----------------------------------------------
                0.00    0.00   10038/10038       EpiRisk::Random::mvgauss(boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > const&) [68]
[47]     0.0    0.00    0.00   10038         boost::numeric::ublas::vector_scalar_binary_traits<boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >, boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >, boost::numeric::ublas::vector_inner_prod<boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >, boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >, boost::numeric::ublas::promote_traits<boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >::value_type, boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >::value_type>::promote_type> >::result_type boost::numeric::ublas::inner_prod<boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >, boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > > >(boost::numeric::ublas::vector_expression<boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > > > const&, boost::numeric::ublas::vector_expression<boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > > > const&) [47]
                0.00    0.00   20054/133075      boost::numeric::ublas::basic_row_major<unsigned long, long>::element(unsigned long, unsigned long, unsigned long, unsigned long) [35]
                0.00    0.00   20054/198278      boost::numeric::ublas::unbounded_array<double, std::allocator<double> >::operator[](unsigned long) const [32]
                0.00    0.00   10038/66987       unsigned long boost::numeric::ublas::same_impl_ex<unsigned long>(unsigned long const&, unsigned long const&, char const*, int) [37]
-----------------------------------------------
                0.00    0.00   10010/10010       EpiRisk::EmpCovar<LogTransform>::sample() [69]
[48]     0.0    0.00    0.00   10010         boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > >::const_iterator::operator*() const [48]
-----------------------------------------------
                0.00    0.00    9620/9620        void boost::numeric::ublas::matrix_assign<boost::numeric::ublas::scalar_assign, boost::numeric::ublas::basic_full<unsigned long>, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > >(boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >&, boost::numeric::ublas::matrix_expression<boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > > const&, boost::numeric::ublas::packed_proxy_tag, boost::numeric::ublas::row_major_tag) [9]
[49]     0.0    0.00    0.00    9620         Mcmc::dumpProdCache() [49]
                0.00    0.00   28860/66987       unsigned long boost::numeric::ublas::same_impl_ex<unsigned long>(unsigned long const&, unsigned long const&, char const*, int) [37]
                0.00    0.00   15392/15392       boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >::const_iterator2::operator==(boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >::const_iterator2 const&) const [45]
                0.00    0.00   15392/30784       boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::const_iterator2::operator==(boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::const_iterator2 const&) const [40]
                0.00    0.00    1924/3848        boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::const_iterator1::operator==(boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::const_iterator1 const&) const [62]
                0.00    0.00    1924/1924        boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >::const_iterator1::operator==(boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >::const_iterator1 const&) const [66]
-----------------------------------------------
                0.00    0.00     235/8872        EpiDataImporter::next() [77]
                0.00    0.00    8637/8872        PopDataImporter::next() [52]
[50]     0.0    0.00    0.00    8872         stlStrTok(std::vector<std::string, std::allocator<std::string> >&, std::string, char const*) [50]
                0.00    0.00   26612/26612       std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&) [42]
-----------------------------------------------
                0.00    0.00     234/8870        boost::multi_index::detail::ordered_index<boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, std::less<double>, boost::multi_index::detail::nth_layer<3, EpiRisk::Individual<TestCovars>, boost::multi_index::indexed_by<boost::multi_index::sequenced<boost::multi_index::tag<EpiRisk::Population<TestCovars>::bySeq, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na> >, boost::multi_index::hashed_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byId, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, mpl_::na, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byI, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byDiseaseStatus, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, mpl_::na, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<EpiRisk::Individual<TestCovars> > >, boost::mpl::v_item<EpiRisk::Population<TestCovars>::byI, boost::mpl::vector0<mpl_::na>, 0>, boost::multi_index::detail::ordered_non_unique_tag>::modify_rollback_(boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<EpiRisk::Individual<TestCovars>, std::allocator<EpiRisk::Individual<TestCovars> > > > >*) [23]
                0.00    0.00    8636/8870        boost::multi_index::detail::hashed_index<boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, boost::hash<std::string>, std::equal_to<std::string>, boost::multi_index::detail::nth_layer<2, EpiRisk::Individual<TestCovars>, boost::multi_index::indexed_by<boost::multi_index::sequenced<boost::multi_index::tag<EpiRisk::Population<TestCovars>::bySeq, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na> >, boost::multi_index::hashed_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byId, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, mpl_::na, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byI, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byDiseaseStatus, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, mpl_::na, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<EpiRisk::Individual<TestCovars> > >, boost::mpl::v_item<EpiRisk::Population<TestCovars>::byId, boost::mpl::vector0<mpl_::na>, 0>, boost::multi_index::detail::hashed_unique_tag>::insert_(EpiRisk::Individual<TestCovars> const&, boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<EpiRisk::Individual<TestCovars>, std::allocator<EpiRisk::Individual<TestCovars> > > > > >*) [20]
[51]     0.0    0.00    0.00    8870         boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >::link(boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*, boost::multi_index::detail::ordered_index_side, boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*, boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*) [51]
                0.00    0.00     227/236         boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >::rotate_left(boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*, boost::multi_index::detail::ordered_index_node_compressed_base<std::allocator<char> >::parent_ref) [76]
-----------------------------------------------
                0.00    0.00    8637/8637        EpiRisk::Population<TestCovars>::importPopData(EpiRisk::DataImporter<TestCovars>&) [21]
[52]     0.0    0.00    0.00    8637         PopDataImporter::next() [52]
                0.00    0.00    8637/8872        stlStrTok(std::vector<std::string, std::allocator<std::string> >&, std::string, char const*) [50]
                0.00    0.00       1/3           std::vector<std::string, std::allocator<std::string> >::~vector() [86]
-----------------------------------------------
                0.00    0.00    8636/8636        boost::multi_index::detail::hashed_index<boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, boost::hash<std::string>, std::equal_to<std::string>, boost::multi_index::detail::nth_layer<2, EpiRisk::Individual<TestCovars>, boost::multi_index::indexed_by<boost::multi_index::sequenced<boost::multi_index::tag<EpiRisk::Population<TestCovars>::bySeq, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na> >, boost::multi_index::hashed_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byId, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, mpl_::na, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byI, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byDiseaseStatus, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, mpl_::na, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<EpiRisk::Individual<TestCovars> > >, boost::mpl::v_item<EpiRisk::Population<TestCovars>::byId, boost::mpl::vector0<mpl_::na>, 0>, boost::multi_index::detail::hashed_unique_tag>::insert_(EpiRisk::Individual<TestCovars> const&, boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<EpiRisk::Individual<TestCovars>, std::allocator<EpiRisk::Individual<TestCovars> > > > > >*) [20]
[53]     0.0    0.00    0.00    8636         boost::multi_index::detail::hashed_index<boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, boost::hash<bool>, std::equal_to<bool>, boost::multi_index::detail::nth_layer<4, EpiRisk::Individual<TestCovars>, boost::multi_index::indexed_by<boost::multi_index::sequenced<boost::multi_index::tag<EpiRisk::Population<TestCovars>::bySeq, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na> >, boost::multi_index::hashed_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byId, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, mpl_::na, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byI, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byDiseaseStatus, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, mpl_::na, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<EpiRisk::Individual<TestCovars> > >, boost::mpl::v_item<EpiRisk::Population<TestCovars>::byDiseaseStatus, boost::mpl::vector0<mpl_::na>, 0>, boost::multi_index::detail::hashed_non_unique_tag>::link_point(EpiRisk::Individual<TestCovars> const&, boost::multi_index::detail::hashed_index_node_impl<std::allocator<char> >*&, boost::multi_index::detail::hashed_non_unique_tag) [53]
                0.00    0.00   17270/38882       EpiRisk::Individual<TestCovars>::hasBeenInfected() const [38]
-----------------------------------------------
                0.00    0.00    8636/8636        boost::multi_index::detail::hashed_index<boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, boost::hash<std::string>, std::equal_to<std::string>, boost::multi_index::detail::nth_layer<2, EpiRisk::Individual<TestCovars>, boost::multi_index::indexed_by<boost::multi_index::sequenced<boost::multi_index::tag<EpiRisk::Population<TestCovars>::bySeq, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na> >, boost::multi_index::hashed_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byId, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, mpl_::na, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byI, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byDiseaseStatus, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, mpl_::na, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<EpiRisk::Individual<TestCovars> > >, boost::mpl::v_item<EpiRisk::Population<TestCovars>::byId, boost::mpl::vector0<mpl_::na>, 0>, boost::multi_index::detail::hashed_unique_tag>::insert_(EpiRisk::Individual<TestCovars> const&, boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<EpiRisk::Individual<TestCovars>, std::allocator<EpiRisk::Individual<TestCovars> > > > > >*) [20]
[54]     0.0    0.00    0.00    8636         void boost::detail::allocator::construct<EpiRisk::Individual<TestCovars> >(void*, EpiRisk::Individual<TestCovars> const&) [54]
-----------------------------------------------
                0.00    0.00    8636/8636        boost::multi_index::detail::hashed_index<boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, boost::hash<std::string>, std::equal_to<std::string>, boost::multi_index::detail::nth_layer<2, EpiRisk::Individual<TestCovars>, boost::multi_index::indexed_by<boost::multi_index::sequenced<boost::multi_index::tag<EpiRisk::Population<TestCovars>::bySeq, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na> >, boost::multi_index::hashed_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byId, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, mpl_::na, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byI, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byDiseaseStatus, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, mpl_::na, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<EpiRisk::Individual<TestCovars> > >, boost::mpl::v_item<EpiRisk::Population<TestCovars>::byId, boost::mpl::vector0<mpl_::na>, 0>, boost::multi_index::detail::hashed_unique_tag>::insert_(EpiRisk::Individual<TestCovars> const&, boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<EpiRisk::Individual<TestCovars>, std::allocator<EpiRisk::Individual<TestCovars> > > > > >*) [20]
[55]     0.0    0.00    0.00    8636         boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>::operator()(EpiRisk::Individual<TestCovars> const&) const [55]
-----------------------------------------------
                0.00    0.00    8636/8636        boost::multi_index::detail::hashed_index<boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, boost::hash<std::string>, std::equal_to<std::string>, boost::multi_index::detail::nth_layer<2, EpiRisk::Individual<TestCovars>, boost::multi_index::indexed_by<boost::multi_index::sequenced<boost::multi_index::tag<EpiRisk::Population<TestCovars>::bySeq, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na> >, boost::multi_index::hashed_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byId, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, mpl_::na, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byI, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byDiseaseStatus, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, mpl_::na, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<EpiRisk::Individual<TestCovars> > >, boost::mpl::v_item<EpiRisk::Population<TestCovars>::byId, boost::mpl::vector0<mpl_::na>, 0>, boost::multi_index::detail::hashed_unique_tag>::insert_(EpiRisk::Individual<TestCovars> const&, boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<EpiRisk::Individual<TestCovars>, std::allocator<EpiRisk::Individual<TestCovars> > > > > >*) [20]
[56]     0.0    0.00    0.00    8636         boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>::operator()(EpiRisk::Individual<TestCovars> const&) const [56]
-----------------------------------------------
                0.00    0.00    8000/8000        Mcmc::updateTrans() [3]
[57]     0.0    0.00    0.00    8000         GammaPrior::operator()(double) [57]
-----------------------------------------------
                0.00    0.00       8/7540        main [1]
                0.00    0.00    7532/7540        Mcmc::updateTrans() [3]
[58]     0.0    0.00    0.00    7540         GammaPrior::~GammaPrior() [58]
-----------------------------------------------
                0.00    0.00       8/7540        main [1]
                0.00    0.00    7532/7540        Mcmc::updateTrans() [3]
[59]     0.0    0.00    0.00    7540         GammaPrior::clone() const [59]
-----------------------------------------------
                0.00    0.00       4/4004        main [1]
                0.00    0.00    4000/4004        Mcmc::updateTrans() [3]
[60]     0.0    0.00    0.00    4004         EpiRisk::Parameter::~Parameter() [60]
-----------------------------------------------
                0.00    0.00    4000/4000        EpiRisk::Random::mvgauss(boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > const&) [68]
[61]     0.0    0.00    0.00    4000         EpiRisk::Random::gaussian(double, double) [61]
-----------------------------------------------
                0.00    0.00    1924/3848        Mcmc::dumpProdCache() [49]
                0.00    0.00    1924/3848        boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >::const_iterator1::operator==(boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >::const_iterator1 const&) const [66]
[62]     0.0    0.00    0.00    3848         boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::const_iterator1::operator==(boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::const_iterator1 const&) const [62]
-----------------------------------------------
                0.00    0.00    3848/3848        void boost::numeric::ublas::matrix_assign<boost::numeric::ublas::scalar_assign, boost::numeric::ublas::basic_full<unsigned long>, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > >(boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >&, boost::numeric::ublas::matrix_expression<boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > > const&, boost::numeric::ublas::packed_proxy_tag, boost::numeric::ublas::row_major_tag) [9]
[63]     0.0    0.00    0.00    3848         boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::iterator2::operator-(boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::iterator2 const&) const [63]
-----------------------------------------------
                0.00    0.00       3/2927        EpiRisk::EmpCovar<LogTransform>::EmpCovar(boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > > const&, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >) [103]
                0.00    0.00     962/2927        void boost::numeric::ublas::matrix_assign<boost::numeric::ublas::scalar_assign, boost::numeric::ublas::basic_full<unsigned long>, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > >(boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >&, boost::numeric::ublas::matrix_expression<boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > > const&, boost::numeric::ublas::packed_proxy_tag, boost::numeric::ublas::row_major_tag) [9]
                0.00    0.00     962/2927        EpiRisk::EmpCovar<LogTransform>::getCovariance() [10]
                0.00    0.00    1000/2927        boost::numeric::ublas::unbounded_array<double, std::allocator<double> >::operator=(boost::numeric::ublas::unbounded_array<double, std::allocator<double> > const&) [70]
[64]     0.0    0.00    0.00    2927         __gnu_cxx::new_allocator<double>::allocate(unsigned long, void const*) [64]
-----------------------------------------------
                0.00    0.00    2000/2000        Mcmc::updateTrans() [3]
[65]     0.0    0.00    0.00    2000         EpiRisk::Random::uniform(double, double) [65]
-----------------------------------------------
                0.00    0.00    1924/1924        Mcmc::dumpProdCache() [49]
[66]     0.0    0.00    0.00    1924         boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >::const_iterator1::operator==(boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >::const_iterator1 const&) const [66]
                0.00    0.00    1924/3848        boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::const_iterator1::operator==(boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::const_iterator1 const&) const [62]
-----------------------------------------------
                0.00    0.00       1/1122        main [1]
                0.00    0.00       1/1122        Mcmc::Mcmc(EpiRisk::Population<TestCovars>&, boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > >&, unsigned long) [13]
                0.00    0.00       2/1122        Mcmc::~Mcmc() [95]
                0.00    0.00     117/1122        Mcmc::updateTrans() [3]
                0.00    0.00    1001/1122        Mcmc::calcLogLikelihood() [4]
[67]     0.0    0.00    0.00    1122         std::_Rb_tree<std::string, std::pair<std::string const, double>, std::_Select1st<std::pair<std::string const, double> >, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, double> >*) [67]
-----------------------------------------------
                0.00    0.00    1005/1005        Mcmc::updateTrans() [3]
[68]     0.0    0.00    0.00    1005         EpiRisk::Random::mvgauss(boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > const&) [68]
                0.00    0.00   38094/148628      boost::numeric::ublas::unbounded_array<double, std::allocator<double> >::operator[](unsigned long) [33]
                0.00    0.00   20076/20078       EpiRisk::Random::Random(unsigned long) [43]
                0.00    0.00   20061/133075      boost::numeric::ublas::basic_row_major<unsigned long, long>::element(unsigned long, unsigned long, unsigned long, unsigned long) [35]
                0.00    0.00   10038/10038       boost::numeric::ublas::vector_scalar_binary_traits<boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >, boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >, boost::numeric::ublas::vector_inner_prod<boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >, boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >, boost::numeric::ublas::promote_traits<boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >::value_type, boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >::value_type>::promote_type> >::result_type boost::numeric::ublas::inner_prod<boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >, boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > > >(boost::numeric::ublas::vector_expression<boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > > > const&, boost::numeric::ublas::vector_expression<boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > > > const&) [47]
                0.00    0.00    4000/4000        EpiRisk::Random::gaussian(double, double) [61]
                0.00    0.00    1000/1000        void boost::numeric::ublas::indexing_vector_assign<boost::numeric::ublas::scalar_assign, boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_vector_binary1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_vector_prod1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double> > >(boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >&, boost::numeric::ublas::vector_expression<boost::numeric::ublas::matrix_vector_binary1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_vector_prod1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double> > > const&) [71]
-----------------------------------------------
                0.00    0.00       1/1001        EpiRisk::EmpCovar<LogTransform>::EmpCovar(boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > > const&, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >) [103]
                0.00    0.00    1000/1001        Mcmc::run(unsigned long, EpiRisk::McmcWriter<EpiRisk::Population<TestCovars> >&) [2]
[69]     0.0    0.00    0.00    1001         EpiRisk::EmpCovar<LogTransform>::sample() [69]
                0.00    0.00   10010/10010       boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > >::const_iterator::operator*() const [48]
                0.00    0.00   10010/29266       boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::operator()(unsigned long, unsigned long) [41]
                0.00    0.00    4004/148628      boost::numeric::ublas::unbounded_array<double, std::allocator<double> >::operator[](unsigned long) [33]
-----------------------------------------------
                0.00    0.00    1000/1000        Mcmc::updateTrans() [3]
[70]     0.0    0.00    0.00    1000         boost::numeric::ublas::unbounded_array<double, std::allocator<double> >::operator=(boost::numeric::ublas::unbounded_array<double, std::allocator<double> > const&) [70]
                0.00    0.00    1000/2927        __gnu_cxx::new_allocator<double>::allocate(unsigned long, void const*) [64]
-----------------------------------------------
                0.00    0.00    1000/1000        EpiRisk::Random::mvgauss(boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > const&) [68]
[71]     0.0    0.00    0.00    1000         void boost::numeric::ublas::indexing_vector_assign<boost::numeric::ublas::scalar_assign, boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_vector_binary1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_vector_prod1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double> > >(boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >&, boost::numeric::ublas::vector_expression<boost::numeric::ublas::matrix_vector_binary1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_vector_prod1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double> > > const&) [71]
                0.00    0.00   32000/198278      boost::numeric::ublas::unbounded_array<double, std::allocator<double> >::operator[](unsigned long) const [32]
                0.00    0.00   16000/133075      boost::numeric::ublas::basic_row_major<unsigned long, long>::element(unsigned long, unsigned long, unsigned long, unsigned long) [35]
                0.00    0.00    5000/66987       unsigned long boost::numeric::ublas::same_impl_ex<unsigned long>(unsigned long const&, unsigned long const&, char const*, int) [37]
                0.00    0.00    4000/148628      boost::numeric::ublas::unbounded_array<double, std::allocator<double> >::operator[](unsigned long) [33]
-----------------------------------------------
                0.00    0.00    1000/1000        Mcmc::run(unsigned long, EpiRisk::McmcWriter<EpiRisk::Population<TestCovars> >&) [2]
[72]     0.0    0.00    0.00    1000         EpiRisk::McmcWriter<EpiRisk::Population<TestCovars> >::write(boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > >&) [72]
                0.00    0.00    1000/1000        boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > >::iterator::operator*() const [73]
-----------------------------------------------
                0.00    0.00    1000/1000        EpiRisk::McmcWriter<EpiRisk::Population<TestCovars> >::write(boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > >&) [72]
[73]     0.0    0.00    0.00    1000         boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > >::iterator::operator*() const [73]
-----------------------------------------------
                0.00    0.00       1/965         boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::symmetric_matrix(unsigned long) [96]
                0.00    0.00       2/965         EpiRisk::EmpCovar<LogTransform>::EmpCovar(boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > > const&, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >) [103]
                0.00    0.00     962/965         EpiRisk::EmpCovar<LogTransform>::getCovariance() [10]
[74]     0.0    0.00    0.00     965         unsigned long boost::numeric::ublas::basic_lower<unsigned long>::packed_size<boost::numeric::ublas::basic_row_major<unsigned long, long> >(boost::numeric::ublas::basic_row_major<unsigned long, long>, unsigned long, unsigned long) [74]
-----------------------------------------------
                0.00    0.00     962/962         void boost::numeric::ublas::matrix_assign<boost::numeric::ublas::scalar_assign, boost::numeric::ublas::basic_full<unsigned long>, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > >(boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >&, boost::numeric::ublas::matrix_expression<boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > > const&, boost::numeric::ublas::packed_proxy_tag, boost::numeric::ublas::row_major_tag) [9]
[75]     0.0    0.00    0.00     962         void boost::numeric::ublas::indexing_matrix_assign<boost::numeric::ublas::scalar_assign, boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > >(boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >&, boost::numeric::ublas::matrix_expression<boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > > const&, boost::numeric::ublas::row_major_tag) [75]
                0.00    0.00   30784/111592      boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::operator()(unsigned long, unsigned long) const [36]
                0.00    0.00   15392/133075      boost::numeric::ublas::basic_row_major<unsigned long, long>::element(unsigned long, unsigned long, unsigned long, unsigned long) [35]
                0.00    0.00   15392/148628      boost::numeric::ublas::unbounded_array<double, std::allocator<double> >::operator[](unsigned long) [33]
                0.00    0.00    3848/66987       unsigned long boost::numeric::ublas::same_impl_ex<unsigned long>(unsigned long const&, unsigned long const&, char const*, int) [37]
-----------------------------------------------
                0.00    0.00       9/236         boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >::rebalance_for_erase(boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*, boost::multi_index::detail::ordered_index_node_compressed_base<std::allocator<char> >::parent_ref, boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*&, boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*&) [79]
                0.00    0.00     227/236         boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >::link(boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*, boost::multi_index::detail::ordered_index_side, boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*, boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*) [51]
[76]     0.0    0.00    0.00     236         boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >::rotate_left(boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*, boost::multi_index::detail::ordered_index_node_compressed_base<std::allocator<char> >::parent_ref) [76]
-----------------------------------------------
                0.00    0.00     235/235         EpiRisk::Population<TestCovars>::importEpiData(EpiRisk::DataImporter<EpiRisk::Events>&) [24]
[77]     0.0    0.00    0.00     235         EpiDataImporter::next() [77]
                0.00    0.00     235/8872        stlStrTok(std::vector<std::string, std::allocator<std::string> >&, std::string, char const*) [50]
                0.00    0.00       1/3           std::vector<std::string, std::allocator<std::string> >::~vector() [86]
-----------------------------------------------
                0.00    0.00     234/234         boost::multi_index::detail::ordered_index<boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, std::less<double>, boost::multi_index::detail::nth_layer<3, EpiRisk::Individual<TestCovars>, boost::multi_index::indexed_by<boost::multi_index::sequenced<boost::multi_index::tag<EpiRisk::Population<TestCovars>::bySeq, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na> >, boost::multi_index::hashed_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byId, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, mpl_::na, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byI, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byDiseaseStatus, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, mpl_::na, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<EpiRisk::Individual<TestCovars> > >, boost::mpl::v_item<EpiRisk::Population<TestCovars>::byI, boost::mpl::vector0<mpl_::na>, 0>, boost::multi_index::detail::ordered_non_unique_tag>::modify_rollback_(boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<EpiRisk::Individual<TestCovars>, std::allocator<EpiRisk::Individual<TestCovars> > > > >*) [23]
[78]     0.0    0.00    0.00     234         boost::multi_index::detail::hashed_index<boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, boost::hash<bool>, std::equal_to<bool>, boost::multi_index::detail::nth_layer<4, EpiRisk::Individual<TestCovars>, boost::multi_index::indexed_by<boost::multi_index::sequenced<boost::multi_index::tag<EpiRisk::Population<TestCovars>::bySeq, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na> >, boost::multi_index::hashed_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byId, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, mpl_::na, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byI, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byDiseaseStatus, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, mpl_::na, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<EpiRisk::Individual<TestCovars> > >, boost::mpl::v_item<EpiRisk::Population<TestCovars>::byDiseaseStatus, boost::mpl::vector0<mpl_::na>, 0>, boost::multi_index::detail::hashed_non_unique_tag>::modify_rollback_(boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<EpiRisk::Individual<TestCovars>, std::allocator<EpiRisk::Individual<TestCovars> > > >*) [78]
                0.00    0.00     702/38882       EpiRisk::Individual<TestCovars>::hasBeenInfected() const [38]
-----------------------------------------------
                0.00    0.00     234/234         boost::multi_index::detail::ordered_index<boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, std::less<double>, boost::multi_index::detail::nth_layer<3, EpiRisk::Individual<TestCovars>, boost::multi_index::indexed_by<boost::multi_index::sequenced<boost::multi_index::tag<EpiRisk::Population<TestCovars>::bySeq, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na> >, boost::multi_index::hashed_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byId, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, mpl_::na, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byI, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byDiseaseStatus, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, mpl_::na, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<EpiRisk::Individual<TestCovars> > >, boost::mpl::v_item<EpiRisk::Population<TestCovars>::byI, boost::mpl::vector0<mpl_::na>, 0>, boost::multi_index::detail::ordered_non_unique_tag>::modify_rollback_(boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<EpiRisk::Individual<TestCovars>, std::allocator<EpiRisk::Individual<TestCovars> > > > >*) [23]
[79]     0.0    0.00    0.00     234         boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >::rebalance_for_erase(boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*, boost::multi_index::detail::ordered_index_node_compressed_base<std::allocator<char> >::parent_ref, boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*&, boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*&) [79]
                0.00    0.00       9/236         boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >::rotate_left(boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*, boost::multi_index::detail::ordered_index_node_compressed_base<std::allocator<char> >::parent_ref) [76]
                0.00    0.00       2/2           boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >::rotate_right(boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*, boost::multi_index::detail::ordered_index_node_compressed_base<std::allocator<char> >::parent_ref) [87]
-----------------------------------------------
                               13806             std::_Rb_tree<std::string, std::pair<std::string const, double>, std::_Select1st<std::pair<std::string const, double> >, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::_M_copy(std::_Rb_tree_node<std::pair<std::string const, double> > const*, std::_Rb_tree_node<std::pair<std::string const, double> >*) [80]
                0.00    0.00       1/118         Mcmc::Mcmc(EpiRisk::Population<TestCovars>&, boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > >&, unsigned long) [13]
                0.00    0.00     117/118         Mcmc::updateTrans() [3]
[80]     0.0    0.00    0.00     118+13806   std::_Rb_tree<std::string, std::pair<std::string const, double>, std::_Select1st<std::pair<std::string const, double> >, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::_M_copy(std::_Rb_tree_node<std::pair<std::string const, double> > const*, std::_Rb_tree_node<std::pair<std::string const, double> >*) [80]
                0.00    0.00   13924/13924       std::_Rb_tree<std::string, std::pair<std::string const, double>, std::_Select1st<std::pair<std::string const, double> >, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::_M_create_node(std::pair<std::string const, double> const&) [46]
                               13806             std::_Rb_tree<std::string, std::pair<std::string const, double>, std::_Select1st<std::pair<std::string const, double> >, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::_M_copy(std::_Rb_tree_node<std::pair<std::string const, double> > const*, std::_Rb_tree_node<std::pair<std::string const, double> >*) [80]
-----------------------------------------------
                0.00    0.00      16/16          boost::multi_index::detail::hashed_index<boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, boost::hash<std::string>, std::equal_to<std::string>, boost::multi_index::detail::nth_layer<2, EpiRisk::Individual<TestCovars>, boost::multi_index::indexed_by<boost::multi_index::sequenced<boost::multi_index::tag<EpiRisk::Population<TestCovars>::bySeq, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na> >, boost::multi_index::hashed_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byId, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, mpl_::na, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byI, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byDiseaseStatus, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, mpl_::na, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<EpiRisk::Individual<TestCovars> > >, boost::mpl::v_item<EpiRisk::Population<TestCovars>::byId, boost::mpl::vector0<mpl_::na>, 0>, boost::multi_index::detail::hashed_unique_tag>::insert_(EpiRisk::Individual<TestCovars> const&, boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<EpiRisk::Individual<TestCovars>, std::allocator<EpiRisk::Individual<TestCovars> > > > > >*) [20]
[81]     0.0    0.00    0.00      16         __gnu_cxx::new_allocator<unsigned long>::allocate(unsigned long, void const*) [81]
-----------------------------------------------
                0.00    0.00       8/8           boost::multi_index::detail::hashed_index<boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, boost::hash<std::string>, std::equal_to<std::string>, boost::multi_index::detail::nth_layer<2, EpiRisk::Individual<TestCovars>, boost::multi_index::indexed_by<boost::multi_index::sequenced<boost::multi_index::tag<EpiRisk::Population<TestCovars>::bySeq, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na> >, boost::multi_index::hashed_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byId, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, mpl_::na, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byI, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byDiseaseStatus, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, mpl_::na, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<EpiRisk::Individual<TestCovars> > >, boost::mpl::v_item<EpiRisk::Population<TestCovars>::byId, boost::mpl::vector0<mpl_::na>, 0>, boost::multi_index::detail::hashed_unique_tag>::insert_(EpiRisk::Individual<TestCovars> const&, boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<EpiRisk::Individual<TestCovars>, std::allocator<EpiRisk::Individual<TestCovars> > > > > >*) [20]
[82]     0.0    0.00    0.00       8         boost::multi_index::detail::bucket_array<std::allocator<EpiRisk::Individual<TestCovars> > >::bucket_array(std::allocator<EpiRisk::Individual<TestCovars> > const&, boost::multi_index::detail::hashed_index_node_impl<std::allocator<char> >*, unsigned long) [82]
-----------------------------------------------
                0.00    0.00       8/8           main [1]
[83]     0.0    0.00    0.00       8         EpiRisk::UniformPrior::~UniformPrior() [83]
-----------------------------------------------
                0.00    0.00       5/5           Mcmc::updateTrans() [3]
[84]     0.0    0.00    0.00       5         boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::~vector() [84]
-----------------------------------------------
                0.00    0.00       4/4           main [1]
[85]     0.0    0.00    0.00       4         EpiRisk::UniformPrior::clone() const [85]
-----------------------------------------------
                0.00    0.00       1/3           EpiDataImporter::next() [77]
                0.00    0.00       1/3           PopDataImporter::next() [52]
                0.00    0.00       1/3           __do_global_ctors_aux [27]
[86]     0.0    0.00    0.00       3         std::vector<std::string, std::allocator<std::string> >::~vector() [86]
-----------------------------------------------
                0.00    0.00       2/2           boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >::rebalance_for_erase(boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*, boost::multi_index::detail::ordered_index_node_compressed_base<std::allocator<char> >::parent_ref, boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*&, boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*&) [79]
[87]     0.0    0.00    0.00       2         boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >::rotate_right(boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*, boost::multi_index::detail::ordered_index_node_compressed_base<std::allocator<char> >::parent_ref) [87]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [27]
[88]     0.0    0.00    0.00       1         global constructors keyed to main [88]
-----------------------------------------------
                0.00    0.00       1/1           EpiRisk::Population<TestCovars>::importEpiData(EpiRisk::DataImporter<EpiRisk::Events>&) [24]
[89]     0.0    0.00    0.00       1         EpiDataImporter::open() [89]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[90]     0.0    0.00    0.00       1         EpiDataImporter::EpiDataImporter(std::string) [90]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[91]     0.0    0.00    0.00       1         EpiDataImporter::~EpiDataImporter() [91]
-----------------------------------------------
                0.00    0.00       1/1           EpiRisk::Population<TestCovars>::importPopData(EpiRisk::DataImporter<TestCovars>&) [21]
[92]     0.0    0.00    0.00       1         PopDataImporter::open() [92]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[93]     0.0    0.00    0.00       1         PopDataImporter::PopDataImporter(std::string) [93]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[94]     0.0    0.00    0.00       1         PopDataImporter::~PopDataImporter() [94]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[95]     0.0    0.00    0.00       1         Mcmc::~Mcmc() [95]
                0.00    0.00       2/1122        std::_Rb_tree<std::string, std::pair<std::string const, double>, std::_Select1st<std::pair<std::string const, double> >, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, double> >*) [67]
                0.00    0.00       1/1           EpiRisk::Random::~Random() [102]
                0.00    0.00       1/1           EpiRisk::EmpCovar<LogTransform>::~EmpCovar() [104]
-----------------------------------------------
                0.00    0.00       1/1           Mcmc::Mcmc(EpiRisk::Population<TestCovars>&, boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > >&, unsigned long) [13]
[96]     0.0    0.00    0.00       1         boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::symmetric_matrix(unsigned long) [96]
                0.00    0.00       1/66987       unsigned long boost::numeric::ublas::same_impl_ex<unsigned long>(unsigned long const&, unsigned long const&, char const*, int) [37]
                0.00    0.00       1/965         unsigned long boost::numeric::ublas::basic_lower<unsigned long>::packed_size<boost::numeric::ublas::basic_row_major<unsigned long, long> >(boost::numeric::ublas::basic_row_major<unsigned long, long>, unsigned long, unsigned long) [74]
-----------------------------------------------
                0.00    0.00       1/1           Mcmc::run(unsigned long, EpiRisk::McmcWriter<EpiRisk::Population<TestCovars> >&) [2]
[97]     0.0    0.00    0.00       1         EpiRisk::McmcWriter<EpiRisk::Population<TestCovars> >::open() [97]
-----------------------------------------------
                0.00    0.00       1/1           Mcmc::run(unsigned long, EpiRisk::McmcWriter<EpiRisk::Population<TestCovars> >&) [2]
[98]     0.0    0.00    0.00       1         EpiRisk::McmcWriter<EpiRisk::Population<TestCovars> >::close() [98]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[99]     0.0    0.00    0.00       1         EpiRisk::McmcWriter<EpiRisk::Population<TestCovars> >::~McmcWriter() [99]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[100]    0.0    0.00    0.00       1         EpiRisk::Population<TestCovars>::Population() [100]
-----------------------------------------------
                0.00    0.00       1/1           Mcmc::Mcmc(EpiRisk::Population<TestCovars>&, boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > >&, unsigned long) [13]
[101]    0.0    0.00    0.00       1         EpiRisk::Random::Random(unsigned long) [101]
-----------------------------------------------
                0.00    0.00       1/1           Mcmc::~Mcmc() [95]
[102]    0.0    0.00    0.00       1         EpiRisk::Random::~Random() [102]
-----------------------------------------------
                0.00    0.00       1/1           Mcmc::Mcmc(EpiRisk::Population<TestCovars>&, boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > >&, unsigned long) [13]
[103]    0.0    0.00    0.00       1         EpiRisk::EmpCovar<LogTransform>::EmpCovar(boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > > const&, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >) [103]
                0.00    0.00       3/2927        __gnu_cxx::new_allocator<double>::allocate(unsigned long, void const*) [64]
                0.00    0.00       2/66987       unsigned long boost::numeric::ublas::same_impl_ex<unsigned long>(unsigned long const&, unsigned long const&, char const*, int) [37]
                0.00    0.00       2/965         unsigned long boost::numeric::ublas::basic_lower<unsigned long>::packed_size<boost::numeric::ublas::basic_row_major<unsigned long, long> >(boost::numeric::ublas::basic_row_major<unsigned long, long>, unsigned long, unsigned long) [74]
                0.00    0.00       1/1001        EpiRisk::EmpCovar<LogTransform>::sample() [69]
-----------------------------------------------
                0.00    0.00       1/1           Mcmc::~Mcmc() [95]
[104]    0.0    0.00    0.00       1         EpiRisk::EmpCovar<LogTransform>::~EmpCovar() [104]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [27]
[105]    0.0    0.00    0.00       1         Mcmc::getLogLikelihood() const [105]
-----------------------------------------------
                0.00    0.00       1/1           Mcmc::Mcmc(EpiRisk::Population<TestCovars>&, boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > >&, unsigned long) [13]
[106]    0.0    0.00    0.00       1         double* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<double>(double const*, double const*, double*) [106]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.


Index by function name

  [88] global constructors keyed to main [9] void boost::numeric::ublas::matrix_assign<boost::numeric::ublas::scalar_assign, boost::numeric::ublas::basic_full<unsigned long>, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > >(boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >&, boost::numeric::ublas::matrix_expression<boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > > const&, boost::numeric::ublas::packed_proxy_tag, boost::numeric::ublas::row_major_tag) [64] __gnu_cxx::new_allocator<double>::allocate(unsigned long, void const*)
  [50] stlStrTok(std::vector<std::string, std::allocator<std::string> >&, std::string, char const*) [8] boost::numeric::ublas::basic_row_major<unsigned long, long>::storage_size(unsigned long, unsigned long) [81] __gnu_cxx::new_allocator<unsigned long>::allocate(unsigned long, void const*)
  [58] GammaPrior::~GammaPrior() [34] boost::numeric::ublas::basic_row_major<unsigned long, long>::lower_element(unsigned long, unsigned long, unsigned long, unsigned long) [59] GammaPrior::clone() const
  [14] GammaPrior::~GammaPrior() [35] boost::numeric::ublas::basic_row_major<unsigned long, long>::element(unsigned long, unsigned long, unsigned long, unsigned long) [105] Mcmc::getLogLikelihood() const
  [57] GammaPrior::operator()(double) [70] boost::numeric::ublas::unbounded_array<double, std::allocator<double> >::operator=(boost::numeric::ublas::unbounded_array<double, std::allocator<double> > const&) [6] Mcmc::beta(EpiRisk::Individual<TestCovars> const&, EpiRisk::Individual<TestCovars> const&) const
  [77] EpiDataImporter::next() [33] boost::numeric::ublas::unbounded_array<double, std::allocator<double> >::operator[](unsigned long) [7] Mcmc::betastar(EpiRisk::Individual<TestCovars> const&, EpiRisk::Individual<TestCovars> const&) const
  [89] EpiDataImporter::open() [96] boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::symmetric_matrix(unsigned long) [55] boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>::operator()(EpiRisk::Individual<TestCovars> const&) const
  [90] EpiDataImporter::EpiDataImporter(std::string) [41] boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::operator()(unsigned long, unsigned long) [56] boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>::operator()(EpiRisk::Individual<TestCovars> const&) const
  [91] EpiDataImporter::~EpiDataImporter() [75] void boost::numeric::ublas::indexing_matrix_assign<boost::numeric::ublas::scalar_assign, boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > >(boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >&, boost::numeric::ublas::matrix_expression<boost::numeric::ublas::matrix_binary<boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::scalar_minus<double, double> > > const&, boost::numeric::ublas::row_major_tag) [32] boost::numeric::ublas::unbounded_array<double, std::allocator<double> >::operator[](unsigned long) const
  [52] PopDataImporter::next() [71] void boost::numeric::ublas::indexing_vector_assign<boost::numeric::ublas::scalar_assign, boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_vector_binary1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_vector_prod1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double> > >(boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >&, boost::numeric::ublas::vector_expression<boost::numeric::ublas::matrix_vector_binary1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::matrix_vector_prod1<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double> > > const&) [62] boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::const_iterator1::operator==(boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::const_iterator1 const&) const
  [92] PopDataImporter::open() [12] boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > >::operator()(unsigned long) [40] boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::const_iterator2::operator==(boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::const_iterator2 const&) const
  [93] PopDataImporter::PopDataImporter(std::string) [84] boost::numeric::ublas::vector<double, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::~vector() [63] boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::iterator2::operator-(boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::iterator2 const&) const
  [94] PopDataImporter::~PopDataImporter() [18] EpiRisk::Individual<TestCovars>::~Individual() [36] boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >::operator()(unsigned long, unsigned long) const
   [3] Mcmc::updateTrans()    [97] EpiRisk::McmcWriter<EpiRisk::Population<TestCovars> >::open() [66] boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >::const_iterator1::operator==(boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >::const_iterator1 const&) const
  [49] Mcmc::dumpProdCache()  [98] EpiRisk::McmcWriter<EpiRisk::Population<TestCovars> >::close() [45] boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >::const_iterator2::operator==(boost::numeric::ublas::matrix_binary_scalar2<boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >, double const, boost::numeric::ublas::scalar_divides<double, double> >::const_iterator2 const&) const
   [5] Mcmc::integPressureOn(boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<EpiRisk::Individual<TestCovars>, std::allocator<EpiRisk::Individual<TestCovars> > > > > > > > const&, double) [72] EpiRisk::McmcWriter<EpiRisk::Population<TestCovars> >::write(boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > >&) [48] boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > >::const_iterator::operator*() const
   [4] Mcmc::calcLogLikelihood() [15] EpiRisk::McmcWriter<EpiRisk::Population<TestCovars> >::write(EpiRisk::Population<TestCovars>&) [73] boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > >::iterator::operator*() const
   [2] Mcmc::run(unsigned long, EpiRisk::McmcWriter<EpiRisk::Population<TestCovars> >&) [99] EpiRisk::McmcWriter<EpiRisk::Population<TestCovars> >::~McmcWriter() [38] EpiRisk::Individual<TestCovars>::hasBeenInfected() const
  [13] Mcmc::Mcmc(EpiRisk::Population<TestCovars>&, boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > >&, unsigned long) [24] EpiRisk::Population<TestCovars>::importEpiData(EpiRisk::DataImporter<EpiRisk::Events>&) [11] EpiRisk::Individual<TestCovars>::getI() const
  [95] Mcmc::~Mcmc()          [21] EpiRisk::Population<TestCovars>::importPopData(EpiRisk::DataImporter<TestCovars>&) [39] EpiRisk::Individual<TestCovars>::getId() const
  [22] bool boost::multi_index::multi_index_container<EpiRisk::Individual<TestCovars>, boost::multi_index::indexed_by<boost::multi_index::sequenced<boost::multi_index::tag<EpiRisk::Population<TestCovars>::bySeq, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na> >, boost::multi_index::hashed_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byId, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, mpl_::na, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byI, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byDiseaseStatus, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, mpl_::na, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<EpiRisk::Individual<TestCovars> > >::modify_<EpiRisk::Population<TestCovars>::modifyEvents, EpiRisk::Population<TestCovars>::modifyEvents>(EpiRisk::Population<TestCovars>::modifyEvents&, EpiRisk::Population<TestCovars>::modifyEvents&, boost::multi_index::detail::sequenced_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<EpiRisk::Individual<TestCovars>, std::allocator<EpiRisk::Individual<TestCovars> > > > > > >*) [100] EpiRisk::Population<TestCovars>::Population() [85] EpiRisk::UniformPrior::clone() const
  [82] boost::multi_index::detail::bucket_array<std::allocator<EpiRisk::Individual<TestCovars> > >::bucket_array(std::allocator<EpiRisk::Individual<TestCovars> > const&, boost::multi_index::detail::hashed_index_node_impl<std::allocator<char> >*, unsigned long) [19] EpiRisk::Population<TestCovars>::~Population() [106] double* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<double>(double const*, double const*, double*)
  [20] boost::multi_index::detail::hashed_index<boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, boost::hash<std::string>, std::equal_to<std::string>, boost::multi_index::detail::nth_layer<2, EpiRisk::Individual<TestCovars>, boost::multi_index::indexed_by<boost::multi_index::sequenced<boost::multi_index::tag<EpiRisk::Population<TestCovars>::bySeq, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na> >, boost::multi_index::hashed_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byId, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, mpl_::na, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byI, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byDiseaseStatus, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, mpl_::na, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<EpiRisk::Individual<TestCovars> > >, boost::mpl::v_item<EpiRisk::Population<TestCovars>::byId, boost::mpl::vector0<mpl_::na>, 0>, boost::multi_index::detail::hashed_unique_tag>::insert_(EpiRisk::Individual<TestCovars> const&, boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<EpiRisk::Individual<TestCovars>, std::allocator<EpiRisk::Individual<TestCovars> > > > > >*) [83] EpiRisk::UniformPrior::~UniformPrior() [25] std::map<std::string, double, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::operator[](std::string const&)
  [53] boost::multi_index::detail::hashed_index<boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, boost::hash<bool>, std::equal_to<bool>, boost::multi_index::detail::nth_layer<4, EpiRisk::Individual<TestCovars>, boost::multi_index::indexed_by<boost::multi_index::sequenced<boost::multi_index::tag<EpiRisk::Population<TestCovars>::bySeq, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na> >, boost::multi_index::hashed_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byId, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, mpl_::na, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byI, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byDiseaseStatus, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, mpl_::na, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<EpiRisk::Individual<TestCovars> > >, boost::mpl::v_item<EpiRisk::Population<TestCovars>::byDiseaseStatus, boost::mpl::vector0<mpl_::na>, 0>, boost::multi_index::detail::hashed_non_unique_tag>::link_point(EpiRisk::Individual<TestCovars> const&, boost::multi_index::detail::hashed_index_node_impl<std::allocator<char> >*&, boost::multi_index::detail::hashed_non_unique_tag) [68] EpiRisk::Random::mvgauss(boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > const&) [42] std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&)
  [78] boost::multi_index::detail::hashed_index<boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, boost::hash<bool>, std::equal_to<bool>, boost::multi_index::detail::nth_layer<4, EpiRisk::Individual<TestCovars>, boost::multi_index::indexed_by<boost::multi_index::sequenced<boost::multi_index::tag<EpiRisk::Population<TestCovars>::bySeq, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na> >, boost::multi_index::hashed_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byId, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, mpl_::na, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byI, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byDiseaseStatus, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, mpl_::na, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<EpiRisk::Individual<TestCovars> > >, boost::mpl::v_item<EpiRisk::Population<TestCovars>::byDiseaseStatus, boost::mpl::vector0<mpl_::na>, 0>, boost::multi_index::detail::hashed_non_unique_tag>::modify_rollback_(boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<EpiRisk::Individual<TestCovars>, std::allocator<EpiRisk::Individual<TestCovars> > > >*) [65] EpiRisk::Random::uniform(double, double) [86] std::vector<std::string, std::allocator<std::string> >::~vector()
  [23] boost::multi_index::detail::ordered_index<boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, std::less<double>, boost::multi_index::detail::nth_layer<3, EpiRisk::Individual<TestCovars>, boost::multi_index::indexed_by<boost::multi_index::sequenced<boost::multi_index::tag<EpiRisk::Population<TestCovars>::bySeq, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na> >, boost::multi_index::hashed_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byId, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, std::string, &(EpiRisk::Individual<TestCovars>::getId() const)>, mpl_::na, mpl_::na>, boost::multi_index::ordered_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byI, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, double, &(EpiRisk::Individual<TestCovars>::getI() const)>, mpl_::na>, boost::multi_index::hashed_non_unique<boost::multi_index::tag<EpiRisk::Population<TestCovars>::byDiseaseStatus, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::const_mem_fun<EpiRisk::Individual<TestCovars>, bool, &(EpiRisk::Individual<TestCovars>::hasBeenInfected() const)>, mpl_::na, mpl_::na>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::allocator<EpiRisk::Individual<TestCovars> > >, boost::mpl::v_item<EpiRisk::Population<TestCovars>::byI, boost::mpl::vector0<mpl_::na>, 0>, boost::multi_index::detail::ordered_non_unique_tag>::modify_rollback_(boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::hashed_index_node<boost::multi_index::detail::index_node_base<EpiRisk::Individual<TestCovars>, std::allocator<EpiRisk::Individual<TestCovars> > > > >*) [61] EpiRisk::Random::gaussian(double, double) [44] std::_Rb_tree<EpiRisk::Contact<EpiRisk::Individual<TestCovars> >, EpiRisk::Contact<EpiRisk::Individual<TestCovars> >, std::_Identity<EpiRisk::Contact<EpiRisk::Individual<TestCovars> > >, std::less<EpiRisk::Contact<EpiRisk::Individual<TestCovars> > >, std::allocator<EpiRisk::Contact<EpiRisk::Individual<TestCovars> > > >::_M_erase(std::_Rb_tree_node<EpiRisk::Contact<EpiRisk::Individual<TestCovars> > >*)
  [76] boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >::rotate_left(boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*, boost::multi_index::detail::ordered_index_node_compressed_base<std::allocator<char> >::parent_ref) [101] EpiRisk::Random::Random(unsigned long) [17] std::_Rb_tree<std::string, std::pair<std::string const, double>, std::_Select1st<std::pair<std::string const, double> >, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, double> const&)
  [87] boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >::rotate_right(boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*, boost::multi_index::detail::ordered_index_node_compressed_base<std::allocator<char> >::parent_ref) [43] EpiRisk::Random::Random(unsigned long) [46] std::_Rb_tree<std::string, std::pair<std::string const, double>, std::_Select1st<std::pair<std::string const, double> >, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::_M_create_node(std::pair<std::string const, double> const&)
  [79] boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >::rebalance_for_erase(boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*, boost::multi_index::detail::ordered_index_node_compressed_base<std::allocator<char> >::parent_ref, boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*&, boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*&) [102] EpiRisk::Random::~Random() [16] std::_Rb_tree<std::string, std::pair<std::string const, double>, std::_Select1st<std::pair<std::string const, double> >, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::_M_insert_unique(std::pair<std::string const, double> const&)
  [51] boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >::link(boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*, boost::multi_index::detail::ordered_index_side, boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*, boost::multi_index::detail::ordered_index_node_impl<std::allocator<char> >*) [10] EpiRisk::EmpCovar<LogTransform>::getCovariance() [26] std::_Rb_tree<std::string, std::pair<std::string const, double>, std::_Select1st<std::pair<std::string const, double> >, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<std::string const, double> >, std::pair<std::string const, double> const&)
  [54] void boost::detail::allocator::construct<EpiRisk::Individual<TestCovars> >(void*, EpiRisk::Individual<TestCovars> const&) [69] EpiRisk::EmpCovar<LogTransform>::sample() [80] std::_Rb_tree<std::string, std::pair<std::string const, double>, std::_Select1st<std::pair<std::string const, double> >, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::_M_copy(std::_Rb_tree_node<std::pair<std::string const, double> > const*, std::_Rb_tree_node<std::pair<std::string const, double> >*)
  [47] boost::numeric::ublas::vector_scalar_binary_traits<boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >, boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >, boost::numeric::ublas::vector_inner_prod<boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >, boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >, boost::numeric::ublas::promote_traits<boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >::value_type, boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >::value_type>::promote_type> >::result_type boost::numeric::ublas::inner_prod<boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > >, boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > > >(boost::numeric::ublas::vector_expression<boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > > > const&, boost::numeric::ublas::vector_expression<boost::numeric::ublas::vector_range<boost::numeric::ublas::matrix_row<boost::numeric::ublas::matrix<double, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > > > > > const&) [103] EpiRisk::EmpCovar<LogTransform>::EmpCovar(boost::numeric::ublas::vector<EpiRisk::Parameter, boost::numeric::ublas::unbounded_array<EpiRisk::Parameter, std::allocator<EpiRisk::Parameter> > > const&, boost::numeric::ublas::symmetric_matrix<double, boost::numeric::ublas::basic_lower<unsigned long>, boost::numeric::ublas::basic_row_major<unsigned long, long>, boost::numeric::ublas::unbounded_array<double, std::allocator<double> > >) [67] std::_Rb_tree<std::string, std::pair<std::string const, double>, std::_Select1st<std::pair<std::string const, double> >, std::less<std::string>, std::allocator<std::pair<std::string const, double> > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, double> >*)
  [74] unsigned long boost::numeric::ublas::basic_lower<unsigned long>::packed_size<boost::numeric::ublas::basic_row_major<unsigned long, long> >(boost::numeric::ublas::basic_row_major<unsigned long, long>, unsigned long, unsigned long) [104] EpiRisk::EmpCovar<LogTransform>::~EmpCovar()
  [37] unsigned long boost::numeric::ublas::same_impl_ex<unsigned long>(unsigned long const&, unsigned long const&, char const*, int) [60] EpiRisk::Parameter::~Parameter()
